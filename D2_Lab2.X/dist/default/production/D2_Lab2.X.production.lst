

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 02 23:19:32 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463                           
   464                           	psect	idataBANK0
   465  054B                     __pidataBANK0:
   466                           
   467                           ;initializer for w_Titulos@F1403
   468  054B  3453               	retlw	83
   469  054C  3431               	retlw	49
   470  054D  343A               	retlw	58
   471  054E  3420               	retlw	32
   472  054F  3420               	retlw	32
   473  0550  3420               	retlw	32
   474  0551  3453               	retlw	83
   475  0552  3432               	retlw	50
   476  0553  343A               	retlw	58
   477  0554  3420               	retlw	32
   478  0555  3420               	retlw	32
   479  0556  3420               	retlw	32
   480  0557  3453               	retlw	83
   481  0558  3433               	retlw	51
   482  0559  343A               	retlw	58
   483  055A  3400               	retlw	0
   484  0018                     _RCSTAbits	set	24
   485  000B                     _INTCONbits	set	11
   486  0007                     _PORTC	set	7
   487  0006                     _PORTB	set	6
   488  001A                     _RCREG	set	26
   489  001E                     _ADRESH	set	30
   490  001F                     _ADCON0bits	set	31
   491  000C                     _PIR1bits	set	12
   492  0005                     _PORTA	set	5
   493  0007                     _PORTCbits	set	7
   494  0098                     _TXSTAbits	set	152
   495  0099                     _SPBRG	set	153
   496  009A                     _SPBRGH	set	154
   497  008F                     _OSCCONbits	set	143
   498  0087                     _TRISC	set	135
   499  0086                     _TRISB	set	134
   500  0085                     _TRISA	set	133
   501  009F                     _ADCON1bits	set	159
   502  008C                     _PIE1bits	set	140
   503  0187                     _BAUDCTLbits	set	391
   504  0189                     _ANSELH	set	393
   505  0188                     _ANSEL	set	392
   506                           
   507                           	psect	cinit
   508  0011                     start_initialization:	
   509                           ; #config settings
   510                           
   511  0011                     __initialization:
   512                           
   513                           ; Initialize objects allocated to BANK0
   514  0011  1383               	bcf	3,7	;select IRP bank0
   515  0012  3061               	movlw	low (__pdataBANK0+16)
   516  0013  00FD               	movwf	btemp+-1
   517  0014  3005               	movlw	high __pidataBANK0
   518  0015  00FE               	movwf	btemp
   519  0016  304B               	movlw	low __pidataBANK0
   520  0017  00FF               	movwf	btemp+1
   521  0018  3051               	movlw	low __pdataBANK0
   522  0019  0084               	movwf	4
   523  001A  120A  118A  252A  120A  118A  	fcall	init_ram0
   524                           
   525                           ; Clear objects allocated to BANK0
   526  001F  303F               	movlw	low __pbssBANK0
   527  0020  0084               	movwf	4
   528  0021  3051               	movlw	low (__pbssBANK0+18)
   529  0022  120A  118A  257F  120A  118A  	fcall	clear_ram0
   530                           
   531                           ; Clear objects allocated to COMMON
   532  0027  01F8               	clrf	__pbssCOMMON& (0+127)
   533  0028                     end_of_initialization:	
   534                           ;End of C runtime variable initialization code
   535                           
   536  0028                     __end_of__initialization:
   537  0028  0183               	clrf	3
   538  0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   539                           
   540                           	psect	bssCOMMON
   541  0078                     __pbssCOMMON:
   542  0078                     _data_rx:
   543  0078                     	ds	1
   544                           
   545                           	psect	bssBANK0
   546  003F                     __pbssBANK0:
   547  003F                     _cont:
   548  003F                     	ds	6
   549  0045                     _pot2:
   550  0045                     	ds	6
   551  004B                     _pot1:
   552  004B                     	ds	6
   553                           
   554                           	psect	dataBANK0
   555  0051                     __pdataBANK0:
   556  0051                     w_Titulos@F1403:
   557  0051                     	ds	16
   558                           
   559                           	psect	inittext
   560  0526                     init_fetch0:	
   561                           ;	Called with low address in FSR and high address in W
   562                           
   563  0526  087E               	movf	btemp,w
   564  0527  008A               	movwf	10
   565  0528  087F               	movf	btemp+1,w
   566  0529  0082               	movwf	2
   567  052A                     init_ram0:	
   568                           ;Called with:
   569                           ;	high address of idata address in btemp 
   570                           ;	low address of idata address in btemp+1 
   571                           ;	low address of data in FSR
   572                           ;	high address + 1 of data in btemp-1
   573                           
   574  052A  120A  118A  2526  120A  118A  	fcall	init_fetch0
   575  052F  0080               	movwf	0
   576  0530  0A84               	incf	4,f
   577  0531  0804               	movf	4,w
   578  0532  067D               	xorwf	btemp+-1,w
   579  0533  1903               	btfsc	3,2
   580  0534  3400               	retlw	0
   581  0535  0AFF               	incf	btemp+1,f
   582  0536  1903               	btfsc	3,2
   583  0537  0AFE               	incf	btemp,f
   584  0538  2D2A               	goto	init_ram0
   585                           
   586                           	psect	clrtext
   587  057F                     clear_ram0:	
   588                           ;	Called with FSR containing the base address, and
   589                           ;	W with the last address+1
   590                           
   591  057F  0064               	clrwdt	;clear the watchdog before getting into this loop
   592  0580                     clrloop0:
   593  0580  0180               	clrf	0	;clear RAM location pointed to by FSR
   594  0581  0A84               	incf	4,f	;increment pointer
   595  0582  0604               	xorwf	4,w	;XOR with final address
   596  0583  1903               	btfsc	3,2	;have we reached the end yet?
   597  0584  3400               	retlw	0	;all done for this memory range, return
   598  0585  0604               	xorwf	4,w	;XOR again to restore value
   599  0586  2D80               	goto	clrloop0	;do the next byte
   600                           
   601                           	psect	cstackCOMMON
   602  0070                     __pcstackCOMMON:
   603  0070                     ?_w_Instruction:
   604  0070                     ?_config_io:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_config_reloj:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_config_int:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_config_rx:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_pulse_E:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_ini_LCD:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_w_Char:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_w_String:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_w_Titulos:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_config_adc:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_isr:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_isr:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_main:	
   641                           ; 1 bytes @ 0x0
   642                           
   643                           
   644                           ; 1 bytes @ 0x0
   645  0070                     	ds	5
   646  0075                     ??_config_io:
   647  0075                     ??_config_reloj:	
   648                           ; 1 bytes @ 0x5
   649                           
   650  0075                     ??_config_int:	
   651                           ; 1 bytes @ 0x5
   652                           
   653  0075                     ??_config_rx:	
   654                           ; 1 bytes @ 0x5
   655                           
   656  0075                     ??_pulse_E:	
   657                           ; 1 bytes @ 0x5
   658                           
   659  0075                     ??_config_adc:	
   660                           ; 1 bytes @ 0x5
   661                           
   662  0075                     ??___wmul:	
   663                           ; 1 bytes @ 0x5
   664                           
   665  0075                     ??___awmod:	
   666                           ; 1 bytes @ 0x5
   667                           
   668  0075                     ??___lwdiv:	
   669                           ; 1 bytes @ 0x5
   670                           
   671  0075                     ??___lwmod:	
   672                           ; 1 bytes @ 0x5
   673                           
   674  0075                     ?_strlen:	
   675                           ; 1 bytes @ 0x5
   676                           
   677  0075                     ___wmul@product:	
   678                           ; 2 bytes @ 0x5
   679                           
   680                           
   681                           ; 2 bytes @ 0x5
   682  0075                     	ds	1
   683  0076                     ??_w_Instruction:
   684  0076                     ??_w_Char:	
   685                           ; 1 bytes @ 0x6
   686                           
   687  0076                     w_Instruction@instruction:	
   688                           ; 1 bytes @ 0x6
   689                           
   690  0076                     w_Char@data:	
   691                           ; 1 bytes @ 0x6
   692                           
   693  0076                     ___awmod@counter:	
   694                           ; 1 bytes @ 0x6
   695                           
   696  0076                     ___lwmod@counter:	
   697                           ; 1 bytes @ 0x6
   698                           
   699                           
   700                           ; 1 bytes @ 0x6
   701  0076                     	ds	1
   702  0077                     ??_strlen:
   703  0077                     ?_set_Cursor:	
   704                           ; 1 bytes @ 0x7
   705                           
   706  0077                     ??___awdiv:	
   707                           ; 1 bytes @ 0x7
   708                           
   709  0077                     set_Cursor@pos:	
   710                           ; 1 bytes @ 0x7
   711                           
   712  0077                     ___awmod@sign:	
   713                           ; 1 bytes @ 0x7
   714                           
   715                           
   716                           ; 1 bytes @ 0x7
   717  0077                     	ds	1
   718                           
   719                           	psect	cstackBANK0
   720  0020                     __pcstackBANK0:
   721  0020                     ??_ini_LCD:
   722  0020                     ??_set_Cursor:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0020                     ?___wmul:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0020                     ?___awmod:	
   729                           ; 2 bytes @ 0x0
   730                           
   731  0020                     ?___lwdiv:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0020                     ?___lwmod:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0020                     strlen@s:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0020                     ___wmul@multiplier:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0020                     ___awmod@divisor:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0020                     ___lwdiv@divisor:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0020                     ___lwmod@divisor:	
   750                           ; 2 bytes @ 0x0
   751                           
   752                           
   753                           ; 2 bytes @ 0x0
   754  0020                     	ds	1
   755  0021                     strlen@cp:
   756                           
   757                           ; 1 bytes @ 0x1
   758  0021                     	ds	1
   759  0022                     ??_w_String:
   760  0022                     set_Cursor@line:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0022                     ___wmul@multiplicand:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0022                     ___awmod@dividend:	
   767                           ; 2 bytes @ 0x2
   768                           
   769  0022                     ___lwdiv@dividend:	
   770                           ; 2 bytes @ 0x2
   771                           
   772  0022                     ___lwmod@dividend:	
   773                           ; 2 bytes @ 0x2
   774                           
   775                           
   776                           ; 2 bytes @ 0x2
   777  0022                     	ds	1
   778  0023                     set_Cursor@direction:
   779                           
   780                           ; 1 bytes @ 0x3
   781  0023                     	ds	1
   782  0024                     ?___awdiv:
   783  0024                     w_String@data:	
   784                           ; 2 bytes @ 0x4
   785                           
   786  0024                     ___lwdiv@counter:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0024                     ___awdiv@divisor:	
   790                           ; 1 bytes @ 0x4
   791                           
   792                           
   793                           ; 2 bytes @ 0x4
   794  0024                     	ds	1
   795  0025                     w_String@i:
   796  0025                     ___lwdiv@quotient:	
   797                           ; 1 bytes @ 0x5
   798                           
   799                           
   800                           ; 2 bytes @ 0x5
   801  0025                     	ds	1
   802  0026                     ??_w_Titulos:
   803  0026                     ___awdiv@dividend:	
   804                           ; 1 bytes @ 0x6
   805                           
   806                           
   807                           ; 2 bytes @ 0x6
   808  0026                     	ds	2
   809  0028                     ___awdiv@counter:
   810                           
   811                           ; 1 bytes @ 0x8
   812  0028                     	ds	1
   813  0029                     ___awdiv@sign:
   814                           
   815                           ; 1 bytes @ 0x9
   816  0029                     	ds	1
   817  002A                     ___awdiv@quotient:
   818  002A                     w_Titulos@title:	
   819                           ; 2 bytes @ 0xA
   820                           
   821                           
   822                           ; 16 bytes @ 0xA
   823  002A                     	ds	2
   824  002C                     ?_divisor:
   825  002C                     ?_map:	
   826                           ; 1 bytes @ 0xC
   827                           
   828  002C                     divisor@num:	
   829                           ; 2 bytes @ 0xC
   830                           
   831                           
   832                           ; 2 bytes @ 0xC
   833  002C                     	ds	2
   834  002E                     ??_map:
   835  002E                     divisor@centena:	
   836                           ; 1 bytes @ 0xE
   837                           
   838                           
   839                           ; 1 bytes @ 0xE
   840  002E                     	ds	1
   841  002F                     divisor@decena:
   842                           
   843                           ; 1 bytes @ 0xF
   844  002F                     	ds	1
   845  0030                     map@num:
   846  0030                     divisor@unidad:	
   847                           ; 1 bytes @ 0x10
   848                           
   849                           
   850                           ; 1 bytes @ 0x10
   851  0030                     	ds	1
   852  0031                     ??_divisor:
   853  0031                     map@res:	
   854                           ; 1 bytes @ 0x11
   855                           
   856                           
   857                           ; 2 bytes @ 0x11
   858  0031                     	ds	3
   859  0034                     divisor@aux:
   860                           
   861                           ; 1 bytes @ 0x14
   862  0034                     	ds	6
   863  003A                     ??_main:
   864                           
   865                           ; 1 bytes @ 0x1A
   866  003A                     	ds	5
   867                           
   868                           	psect	maintext
   869  002C                     __pmaintext:	
   870 ;;
   871 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   872 ;;
   873 ;; *************** function _main *****************
   874 ;; Defined at:
   875 ;;		line 99 in file "D2_Lab2.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : B00/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       5       0       0       0
   892 ;;      Totals:         0       5       0       0       0
   893 ;;Total ram usage:        5 bytes
   894 ;; Hardware stack levels required when called: 5
   895 ;; This function calls:
   896 ;;		_config_adc
   897 ;;		_config_int
   898 ;;		_config_io
   899 ;;		_config_reloj
   900 ;;		_config_rx
   901 ;;		_divisor
   902 ;;		_ini_LCD
   903 ;;		_map
   904 ;;		_set_Cursor
   905 ;;		_w_Char
   906 ;;		_w_Titulos
   907 ;; This function is called by:
   908 ;;		Startup code after reset
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _main
   914  002C                     _main:
   915  002C                     l1822:	
   916                           ;incstack = 0
   917                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   918                           
   919                           
   920                           ;D2_Lab2.c: 101:     config_io();
   921  002C  120A  118A  2539  120A  118A  	fcall	_config_io
   922  0031                     l1824:
   923                           
   924                           ;D2_Lab2.c: 102:     config_reloj();
   925  0031  120A  118A  2587  120A  118A  	fcall	_config_reloj
   926  0036                     l1826:
   927                           
   928                           ;D2_Lab2.c: 104:     ini_LCD();
   929  0036  120A  118A  2317  120A  118A  	fcall	_ini_LCD
   930  003B                     l1828:
   931                           
   932                           ;D2_Lab2.c: 105:     w_Titulos();
   933  003B  120A  118A  218B  120A  118A  	fcall	_w_Titulos
   934  0040                     l1830:
   935                           
   936                           ;D2_Lab2.c: 107:     config_int();
   937  0040  120A  118A  258E  120A  118A  	fcall	_config_int
   938  0045                     l1832:
   939                           
   940                           ;D2_Lab2.c: 108:     config_adc();
   941  0045  120A  118A  24D6  120A  118A  	fcall	_config_adc
   942  004A                     l1834:
   943                           
   944                           ;D2_Lab2.c: 109:     config_rx();
   945  004A  120A  118A  2510  120A  118A  	fcall	_config_rx
   946  004F                     l1836:
   947                           
   948                           ;D2_Lab2.c: 112:     {;D2_Lab2.c: 113:         if(!ADCON0bits.GO)
   949  004F  1283               	bcf	3,5	;RP0=0, select bank0
   950  0050  1303               	bcf	3,6	;RP1=0, select bank0
   951  0051  189F               	btfsc	31,1	;volatile
   952  0052  2854               	goto	u1271
   953  0053  2855               	goto	u1270
   954  0054                     u1271:
   955  0054  2871               	goto	l1848
   956  0055                     u1270:
   957  0055                     l1838:
   958                           
   959                           ;D2_Lab2.c: 114:         {;D2_Lab2.c: 115:             if(ADCON0bits.CHS == 10)
   960  0055  0C1F               	rrf	31,w	;volatile
   961  0056  00BA               	movwf	??_main
   962  0057  0C3A               	rrf	??_main,w
   963  0058  390F               	andlw	15
   964  0059  3A0A               	xorlw	10
   965  005A  1D03               	skipz
   966  005B  285D               	goto	u1281
   967  005C  285E               	goto	u1280
   968  005D                     u1281:
   969  005D  2863               	goto	l1842
   970  005E                     u1280:
   971  005E                     l1840:
   972                           
   973                           ;D2_Lab2.c: 116:                 ADCON0bits.CHS = 12;
   974  005E  081F               	movf	31,w	;volatile
   975  005F  39C3               	andlw	-61
   976  0060  3830               	iorlw	48
   977  0061  009F               	movwf	31	;volatile
   978  0062  2867               	goto	l1844
   979  0063                     l1842:
   980                           
   981                           ;D2_Lab2.c: 118:                 ADCON0bits.CHS = 10;
   982  0063  081F               	movf	31,w	;volatile
   983  0064  39C3               	andlw	-61
   984  0065  3828               	iorlw	40
   985  0066  009F               	movwf	31	;volatile
   986  0067                     l1844:
   987                           
   988                           ;D2_Lab2.c: 120:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   989  0067  300F               	movlw	15
   990  0068  1283               	bcf	3,5	;RP0=0, select bank0
   991  0069  1303               	bcf	3,6	;RP1=0, select bank0
   992  006A  00BA               	movwf	??_main
   993  006B                     u1297:
   994  006B  0BBA               	decfsz	??_main,f
   995  006C  286B               	goto	u1297
   996  006D  286E               	nop2
   997  006E                     l1846:
   998                           
   999                           ;D2_Lab2.c: 121:             ADCON0bits.GO = 1;
  1000  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1001  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0070  149F               	bsf	31,1	;volatile
  1003  0071                     l1848:
  1004                           
  1005                           ;D2_Lab2.c: 125:         pot1.mapeado = map(pot1.adresh);
  1006  0071  084B               	movf	_pot1,w
  1007  0072  120A  118A  2461  120A  118A  	fcall	_map
  1008  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0079  082D               	movf	?_map+1,w
  1011  007A  00CD               	movwf	_pot1+2
  1012  007B  082C               	movf	?_map,w
  1013  007C  00CC               	movwf	_pot1+1
  1014  007D                     l1850:
  1015                           
  1016                           ;D2_Lab2.c: 126:         pot2.mapeado = map(pot2.adresh);
  1017  007D  0845               	movf	_pot2,w
  1018  007E  120A  118A  2461  120A  118A  	fcall	_map
  1019  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0085  082D               	movf	?_map+1,w
  1022  0086  00C7               	movwf	_pot2+2
  1023  0087  082C               	movf	?_map,w
  1024  0088  00C6               	movwf	_pot2+1
  1025  0089                     l1852:
  1026                           
  1027                           ;D2_Lab2.c: 129:         divisor(pot1.mapeado, &pot1.centena, &pot1.decena, &pot1.unidad
      +                          );
  1028  0089  084D               	movf	_pot1+2,w
  1029  008A  00AD               	movwf	divisor@num+1
  1030  008B  084C               	movf	_pot1+1,w
  1031  008C  00AC               	movwf	divisor@num
  1032  008D  304E               	movlw	(low ((_pot1| 0+3)))& (0+255)
  1033  008E  00BA               	movwf	??_main
  1034  008F  083A               	movf	??_main,w
  1035  0090  00AE               	movwf	divisor@centena
  1036  0091  304F               	movlw	(low ((_pot1| 0+4)))& (0+255)
  1037  0092  00BB               	movwf	??_main+1
  1038  0093  083B               	movf	??_main+1,w
  1039  0094  00AF               	movwf	divisor@decena
  1040  0095  3050               	movlw	(low ((_pot1| 0+5)))& (0+255)
  1041  0096  00BC               	movwf	??_main+2
  1042  0097  083C               	movf	??_main+2,w
  1043  0098  00B0               	movwf	divisor@unidad
  1044  0099  120A  118A  225E  120A  118A  	fcall	_divisor
  1045  009E                     l1854:
  1046                           
  1047                           ;D2_Lab2.c: 130:         divisor(pot2.mapeado, &pot2.centena, &pot2.decena, &pot2.unidad
      +                          );
  1048  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1049  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1050  00A0  0847               	movf	_pot2+2,w
  1051  00A1  00AD               	movwf	divisor@num+1
  1052  00A2  0846               	movf	_pot2+1,w
  1053  00A3  00AC               	movwf	divisor@num
  1054  00A4  3048               	movlw	(low ((_pot2| 0+3)))& (0+255)
  1055  00A5  00BA               	movwf	??_main
  1056  00A6  083A               	movf	??_main,w
  1057  00A7  00AE               	movwf	divisor@centena
  1058  00A8  3049               	movlw	(low ((_pot2| 0+4)))& (0+255)
  1059  00A9  00BB               	movwf	??_main+1
  1060  00AA  083B               	movf	??_main+1,w
  1061  00AB  00AF               	movwf	divisor@decena
  1062  00AC  304A               	movlw	(low ((_pot2| 0+5)))& (0+255)
  1063  00AD  00BC               	movwf	??_main+2
  1064  00AE  083C               	movf	??_main+2,w
  1065  00AF  00B0               	movwf	divisor@unidad
  1066  00B0  120A  118A  225E  120A  118A  	fcall	_divisor
  1067  00B5                     l1856:
  1068                           
  1069                           ;D2_Lab2.c: 131:         divisor(cont.adresh, &cont.centena, &cont.decena, &cont.unidad)
      +                          ;
  1070  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1071  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1072  00B7  083F               	movf	_cont,w
  1073  00B8  00BA               	movwf	??_main
  1074  00B9  01BB               	clrf	??_main+1
  1075  00BA  083A               	movf	??_main,w
  1076  00BB  00AC               	movwf	divisor@num
  1077  00BC  083B               	movf	??_main+1,w
  1078  00BD  00AD               	movwf	divisor@num+1
  1079  00BE  3042               	movlw	(low ((_cont| 0+3)))& (0+255)
  1080  00BF  00BC               	movwf	??_main+2
  1081  00C0  083C               	movf	??_main+2,w
  1082  00C1  00AE               	movwf	divisor@centena
  1083  00C2  3043               	movlw	(low ((_cont| 0+4)))& (0+255)
  1084  00C3  00BD               	movwf	??_main+3
  1085  00C4  083D               	movf	??_main+3,w
  1086  00C5  00AF               	movwf	divisor@decena
  1087  00C6  3044               	movlw	(low ((_cont| 0+5)))& (0+255)
  1088  00C7  00BE               	movwf	??_main+4
  1089  00C8  083E               	movf	??_main+4,w
  1090  00C9  00B0               	movwf	divisor@unidad
  1091  00CA  120A  118A  225E  120A  118A  	fcall	_divisor
  1092  00CF                     l1858:
  1093                           
  1094                           ;D2_Lab2.c: 134:         set_Cursor(1,0);
  1095  00CF  01F7               	clrf	set_Cursor@pos
  1096  00D0  3001               	movlw	1
  1097  00D1  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1098  00D6                     l1860:
  1099                           
  1100                           ;D2_Lab2.c: 135:         w_Char(pot1.centena + '0');
  1101  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1102  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1103  00D8  084E               	movf	_pot1+3,w
  1104  00D9  3E30               	addlw	48
  1105  00DA  120A  118A  255B  120A  118A  	fcall	_w_Char
  1106  00DF                     l1862:
  1107                           
  1108                           ;D2_Lab2.c: 136:         set_Cursor(1,2);
  1109  00DF  3002               	movlw	2
  1110  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00E2  00BA               	movwf	??_main
  1113  00E3  083A               	movf	??_main,w
  1114  00E4  00F7               	movwf	set_Cursor@pos
  1115  00E5  3001               	movlw	1
  1116  00E6  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1117  00EB                     l1864:
  1118                           
  1119                           ;D2_Lab2.c: 137:         w_Char(pot1.decena + '0');
  1120  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1121  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1122  00ED  084F               	movf	_pot1+4,w
  1123  00EE  3E30               	addlw	48
  1124  00EF  120A  118A  255B  120A  118A  	fcall	_w_Char
  1125  00F4                     l1866:
  1126                           
  1127                           ;D2_Lab2.c: 138:         set_Cursor(1,3);
  1128  00F4  3003               	movlw	3
  1129  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1130  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1131  00F7  00BA               	movwf	??_main
  1132  00F8  083A               	movf	??_main,w
  1133  00F9  00F7               	movwf	set_Cursor@pos
  1134  00FA  3001               	movlw	1
  1135  00FB  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1136  0100                     l1868:
  1137                           
  1138                           ;D2_Lab2.c: 139:         w_Char(pot1.unidad + '0');
  1139  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0102  0850               	movf	_pot1+5,w
  1142  0103  3E30               	addlw	48
  1143  0104  120A  118A  255B  120A  118A  	fcall	_w_Char
  1144  0109                     l1870:
  1145                           
  1146                           ;D2_Lab2.c: 142:         set_Cursor(1,6);
  1147  0109  3006               	movlw	6
  1148  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1149  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1150  010C  00BA               	movwf	??_main
  1151  010D  083A               	movf	??_main,w
  1152  010E  00F7               	movwf	set_Cursor@pos
  1153  010F  3001               	movlw	1
  1154  0110  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1155  0115                     l1872:
  1156                           
  1157                           ;D2_Lab2.c: 143:         w_Char(pot2.centena + '0');
  1158  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0117  0848               	movf	_pot2+3,w
  1161  0118  3E30               	addlw	48
  1162  0119  120A  118A  255B  120A  118A  	fcall	_w_Char
  1163  011E                     l1874:
  1164                           
  1165                           ;D2_Lab2.c: 144:         set_Cursor(1,8);
  1166  011E  3008               	movlw	8
  1167  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0121  00BA               	movwf	??_main
  1170  0122  083A               	movf	??_main,w
  1171  0123  00F7               	movwf	set_Cursor@pos
  1172  0124  3001               	movlw	1
  1173  0125  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1174  012A                     l1876:
  1175                           
  1176                           ;D2_Lab2.c: 145:         w_Char(pot2.decena + '0');
  1177  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1178  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1179  012C  0849               	movf	_pot2+4,w
  1180  012D  3E30               	addlw	48
  1181  012E  120A  118A  255B  120A  118A  	fcall	_w_Char
  1182  0133                     l1878:
  1183                           
  1184                           ;D2_Lab2.c: 146:         set_Cursor(1,9);
  1185  0133  3009               	movlw	9
  1186  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0136  00BA               	movwf	??_main
  1189  0137  083A               	movf	??_main,w
  1190  0138  00F7               	movwf	set_Cursor@pos
  1191  0139  3001               	movlw	1
  1192  013A  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1193  013F                     l1880:
  1194                           
  1195                           ;D2_Lab2.c: 147:         w_Char(pot2.unidad + '0');
  1196  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0141  084A               	movf	_pot2+5,w
  1199  0142  3E30               	addlw	48
  1200  0143  120A  118A  255B  120A  118A  	fcall	_w_Char
  1201  0148                     l1882:
  1202                           
  1203                           ;D2_Lab2.c: 150:         set_Cursor(1,13);
  1204  0148  300D               	movlw	13
  1205  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1206  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1207  014B  00BA               	movwf	??_main
  1208  014C  083A               	movf	??_main,w
  1209  014D  00F7               	movwf	set_Cursor@pos
  1210  014E  3001               	movlw	1
  1211  014F  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1212  0154                     l1884:
  1213                           
  1214                           ;D2_Lab2.c: 151:         w_Char(cont.centena + '0');
  1215  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0156  0842               	movf	_cont+3,w
  1218  0157  3E30               	addlw	48
  1219  0158  120A  118A  255B  120A  118A  	fcall	_w_Char
  1220  015D                     l1886:
  1221                           
  1222                           ;D2_Lab2.c: 152:         set_Cursor(1,14);
  1223  015D  300E               	movlw	14
  1224  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1225  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0160  00BA               	movwf	??_main
  1227  0161  083A               	movf	??_main,w
  1228  0162  00F7               	movwf	set_Cursor@pos
  1229  0163  3001               	movlw	1
  1230  0164  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1231  0169                     l1888:
  1232                           
  1233                           ;D2_Lab2.c: 153:         w_Char(cont.decena + '0');
  1234  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1235  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1236  016B  0843               	movf	_cont+4,w
  1237  016C  3E30               	addlw	48
  1238  016D  120A  118A  255B  120A  118A  	fcall	_w_Char
  1239  0172                     l1890:
  1240                           
  1241                           ;D2_Lab2.c: 154:         set_Cursor(1,15);
  1242  0172  300F               	movlw	15
  1243  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0175  00BA               	movwf	??_main
  1246  0176  083A               	movf	??_main,w
  1247  0177  00F7               	movwf	set_Cursor@pos
  1248  0178  3001               	movlw	1
  1249  0179  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1250  017E                     l1892:
  1251                           
  1252                           ;D2_Lab2.c: 155:         w_Char(cont.unidad + '0');
  1253  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1254  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0180  0844               	movf	_cont+5,w
  1256  0181  3E30               	addlw	48
  1257  0182  120A  118A  255B  120A  118A  	fcall	_w_Char
  1258  0187  284F               	goto	l1836
  1259  0188  120A  118A  280E   	ljmp	start
  1260  018B                     __end_of_main:
  1261                           
  1262                           	psect	text1
  1263  018B                     __ptext1:	
  1264 ;; *************** function _w_Titulos *****************
  1265 ;; Defined at:
  1266 ;;		line 81 in file "LCD.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  title          16   10[BANK0 ] unsigned char [16]
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0      16       0       0       0
  1282 ;;      Temps:          0       4       0       0       0
  1283 ;;      Totals:         0      20       0       0       0
  1284 ;;Total ram usage:       20 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 4
  1287 ;; This function calls:
  1288 ;;		_set_Cursor
  1289 ;;		_w_Char
  1290 ;;		_w_String
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _w_Titulos
  1298  018B                     _w_Titulos:
  1299  018B                     l1428:	
  1300                           ;incstack = 0
  1301                           ; Regs used in _w_Titulos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1302                           
  1303                           
  1304                           ;LCD.c: 84:     unsigned char title[] = "S1:   S2:   S3:";
  1305  018B  302A               	movlw	w_Titulos@title& (0+255)
  1306  018C  0084               	movwf	4
  1307  018D  3051               	movlw	low w_Titulos@F1403
  1308  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1309  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0190  00A6               	movwf	??_w_Titulos
  1311  0191  0804               	movf	4,w
  1312  0192  00A7               	movwf	??_w_Titulos+1
  1313  0193  3010               	movlw	16
  1314  0194  00A8               	movwf	??_w_Titulos+2
  1315  0195                     u850:
  1316  0195  0826               	movf	??_w_Titulos,w
  1317  0196  0084               	movwf	4
  1318  0197  1383               	bcf	3,7	;select IRP bank0
  1319  0198  0800               	movf	0,w
  1320  0199  00A9               	movwf	??_w_Titulos+3
  1321  019A  0AA6               	incf	??_w_Titulos,f
  1322  019B  0827               	movf	??_w_Titulos+1,w
  1323  019C  0084               	movwf	4
  1324  019D  0829               	movf	??_w_Titulos+3,w
  1325  019E  0080               	movwf	0
  1326  019F  0AA7               	incf	??_w_Titulos+1,f
  1327  01A0  0BA8               	decfsz	??_w_Titulos+2,f
  1328  01A1  2995               	goto	u850
  1329  01A2                     l1430:
  1330                           
  1331                           ;LCD.c: 85:     set_Cursor(0,1);
  1332  01A2  01F7               	clrf	set_Cursor@pos
  1333  01A3  0AF7               	incf	set_Cursor@pos,f
  1334  01A4  3000               	movlw	0
  1335  01A5  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1336  01AA                     l1432:
  1337                           
  1338                           ;LCD.c: 86:     w_String(title);
  1339  01AA  302A               	movlw	(low (w_Titulos@title| 0))& (0+255)
  1340  01AB  120A  118A  2434  120A  118A  	fcall	_w_String
  1341  01B0                     l1434:
  1342                           
  1343                           ;LCD.c: 89:     set_Cursor(1,1);
  1344  01B0  01F7               	clrf	set_Cursor@pos
  1345  01B1  0AF7               	incf	set_Cursor@pos,f
  1346  01B2  3001               	movlw	1
  1347  01B3  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1348  01B8                     l1436:
  1349                           
  1350                           ;LCD.c: 90:     w_Char('.');
  1351  01B8  302E               	movlw	46
  1352  01B9  120A  118A  255B  120A  118A  	fcall	_w_Char
  1353  01BE                     l1438:
  1354                           
  1355                           ;LCD.c: 91:     set_Cursor(1,4);
  1356  01BE  3004               	movlw	4
  1357  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1358  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1359  01C1  00A6               	movwf	??_w_Titulos
  1360  01C2  0826               	movf	??_w_Titulos,w
  1361  01C3  00F7               	movwf	set_Cursor@pos
  1362  01C4  3001               	movlw	1
  1363  01C5  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1364  01CA                     l1440:
  1365                           
  1366                           ;LCD.c: 92:     w_Char('V');
  1367  01CA  3056               	movlw	86
  1368  01CB  120A  118A  255B  120A  118A  	fcall	_w_Char
  1369  01D0                     l1442:
  1370                           
  1371                           ;LCD.c: 95:     set_Cursor(1,7);
  1372  01D0  3007               	movlw	7
  1373  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1374  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1375  01D3  00A6               	movwf	??_w_Titulos
  1376  01D4  0826               	movf	??_w_Titulos,w
  1377  01D5  00F7               	movwf	set_Cursor@pos
  1378  01D6  3001               	movlw	1
  1379  01D7  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1380  01DC                     l1444:
  1381                           
  1382                           ;LCD.c: 96:     w_Char('.');
  1383  01DC  302E               	movlw	46
  1384  01DD  120A  118A  255B  120A  118A  	fcall	_w_Char
  1385  01E2                     l1446:
  1386                           
  1387                           ;LCD.c: 97:     set_Cursor(1,10);
  1388  01E2  300A               	movlw	10
  1389  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1390  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1391  01E5  00A6               	movwf	??_w_Titulos
  1392  01E6  0826               	movf	??_w_Titulos,w
  1393  01E7  00F7               	movwf	set_Cursor@pos
  1394  01E8  3001               	movlw	1
  1395  01E9  120A  118A  24B5  120A  118A  	fcall	_set_Cursor
  1396  01EE                     l1448:
  1397                           
  1398                           ;LCD.c: 98:     w_Char('V');
  1399  01EE  3056               	movlw	86
  1400  01EF  120A  118A  255B  120A  118A  	fcall	_w_Char
  1401  01F4                     l36:
  1402  01F4  0008               	return
  1403  01F5                     __end_of_w_Titulos:
  1404                           
  1405                           	psect	text2
  1406  0434                     __ptext2:	
  1407 ;; *************** function _w_String *****************
  1408 ;; Defined at:
  1409 ;;		line 63 in file "LCD.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  data            1    wreg     PTR unsigned char 
  1412 ;;		 -> w_Titulos@title(16), 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  data            1    4[BANK0 ] PTR unsigned char 
  1415 ;;		 -> w_Titulos@title(16), 
  1416 ;;  i               1    5[BANK0 ] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       2       0       0       0
  1428 ;;      Temps:          0       2       0       0       0
  1429 ;;      Totals:         0       4       0       0       0
  1430 ;;Total ram usage:        4 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 3
  1433 ;; This function calls:
  1434 ;;		_strlen
  1435 ;;		_w_Char
  1436 ;; This function is called by:
  1437 ;;		_w_Titulos
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _w_String
  1443  0434                     _w_String:
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _w_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1447                           ;w_String@data stored from wreg
  1448  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0436  00A4               	movwf	w_String@data
  1451  0437                     l1240:
  1452                           
  1453                           ;LCD.c: 63: void w_String(unsigned char data[]);LCD.c: 64: {;LCD.c: 65:     for(uint8_t 
      +                          i=0; i<strlen(data); i++)
  1454  0437  01A5               	clrf	w_String@i
  1455  0438  2C4B               	goto	l1246
  1456  0439                     l1242:
  1457                           
  1458                           ;LCD.c: 66:     {;LCD.c: 67:         w_Char(data[i]);
  1459  0439  0825               	movf	w_String@i,w
  1460  043A  0724               	addwf	w_String@data,w
  1461  043B  00A2               	movwf	??_w_String
  1462  043C  0822               	movf	??_w_String,w
  1463  043D  0084               	movwf	4
  1464  043E  1383               	bcf	3,7	;select IRP bank0
  1465  043F  0800               	movf	0,w
  1466  0440  120A  118A  255B  120A  118A  	fcall	_w_Char
  1467  0445                     l1244:
  1468                           
  1469                           ;LCD.c: 68:     }
  1470  0445  3001               	movlw	1
  1471  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0448  00A2               	movwf	??_w_String
  1474  0449  0822               	movf	??_w_String,w
  1475  044A  07A5               	addwf	w_String@i,f
  1476  044B                     l1246:
  1477  044B  0824               	movf	w_String@data,w
  1478  044C  120A  118A  24F5  120A  118A  	fcall	_strlen
  1479  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0453  0825               	movf	w_String@i,w
  1482  0454  00A2               	movwf	??_w_String
  1483  0455  01A3               	clrf	??_w_String+1
  1484  0456  0876               	movf	?_strlen+1,w
  1485  0457  0223               	subwf	??_w_String+1,w
  1486  0458  1D03               	skipz
  1487  0459  2C5C               	goto	u475
  1488  045A  0875               	movf	?_strlen,w
  1489  045B  0222               	subwf	??_w_String,w
  1490  045C                     u475:
  1491  045C  1C03               	skipc
  1492  045D  2C5F               	goto	u471
  1493  045E  2C60               	goto	u470
  1494  045F                     u471:
  1495  045F  2C39               	goto	l1242
  1496  0460                     u470:
  1497  0460                     l28:
  1498  0460  0008               	return
  1499  0461                     __end_of_w_String:
  1500                           
  1501                           	psect	text3
  1502  055B                     __ptext3:	
  1503 ;; *************** function _w_Char *****************
  1504 ;; Defined at:
  1505 ;;		line 55 in file "LCD.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  data            1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  data            1    6[COMMON] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0
  1522 ;;      Totals:         1       0       0       0       0
  1523 ;;Total ram usage:        1 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 2
  1526 ;; This function calls:
  1527 ;;		_pulse_E
  1528 ;; This function is called by:
  1529 ;;		_w_String
  1530 ;;		_w_Titulos
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _w_Char
  1537  055B                     _w_Char:
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _w_Char: [wreg+status,2+status,0+pclath+cstack]
  1541                           ;w_Char@data stored from wreg
  1542  055B  00F6               	movwf	w_Char@data
  1543  055C                     l1222:
  1544                           
  1545                           ;LCD.c: 55: void w_Char(unsigned char data);LCD.c: 56: {;LCD.c: 57:     PORTCbits.RC0 = 
      +                          1;
  1546  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1547  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1548  055E  1407               	bsf	7,0	;volatile
  1549  055F                     l1224:
  1550                           
  1551                           ;LCD.c: 58:     PORTA = data;
  1552  055F  0876               	movf	w_Char@data,w
  1553  0560  0085               	movwf	5	;volatile
  1554  0561                     l1226:
  1555                           
  1556                           ;LCD.c: 59:     pulse_E();
  1557  0561  120A  118A  2573  120A  118A  	fcall	_pulse_E
  1558  0566                     l22:
  1559  0566  0008               	return
  1560  0567                     __end_of_w_Char:
  1561                           
  1562                           	psect	text4
  1563  04F5                     __ptext4:	
  1564 ;; *************** function _strlen *****************
  1565 ;; Defined at:
  1566 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  s               1    wreg     PTR const unsigned char 
  1569 ;;		 -> w_Titulos@title(16), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1572 ;;		 -> w_Titulos@title(16), 
  1573 ;;  cp              1    1[BANK0 ] PTR const unsigned char 
  1574 ;;		 -> w_Titulos@title(16), 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  2    5[COMMON] unsigned int 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         2       0       0       0       0
  1585 ;;      Locals:         0       2       0       0       0
  1586 ;;      Temps:          1       0       0       0       0
  1587 ;;      Totals:         3       2       0       0       0
  1588 ;;Total ram usage:        5 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_w_String
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _strlen
  1600  04F5                     _strlen:
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1604                           ;strlen@s stored from wreg
  1605  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1606  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1607  04F7  00A0               	movwf	strlen@s
  1608  04F8                     l1230:
  1609  04F8  0820               	movf	strlen@s,w
  1610  04F9  00F7               	movwf	??_strlen
  1611  04FA  0877               	movf	??_strlen,w
  1612  04FB  00A1               	movwf	strlen@cp
  1613  04FC  2D01               	goto	l1234
  1614  04FD                     l1232:
  1615  04FD  3001               	movlw	1
  1616  04FE  00F7               	movwf	??_strlen
  1617  04FF  0877               	movf	??_strlen,w
  1618  0500  07A1               	addwf	strlen@cp,f
  1619  0501                     l1234:
  1620  0501  0821               	movf	strlen@cp,w
  1621  0502  0084               	movwf	4
  1622  0503  1383               	bcf	3,7	;select IRP bank0
  1623  0504  0800               	movf	0,w
  1624  0505  1D03               	btfss	3,2
  1625  0506  2D08               	goto	u461
  1626  0507  2D09               	goto	u460
  1627  0508                     u461:
  1628  0508  2CFD               	goto	l1232
  1629  0509                     u460:
  1630  0509                     l1236:
  1631  0509  0820               	movf	strlen@s,w
  1632  050A  0221               	subwf	strlen@cp,w
  1633  050B  00F5               	movwf	?_strlen
  1634  050C  01F6               	clrf	?_strlen+1
  1635  050D  1BF5               	btfsc	?_strlen,7
  1636  050E  03F6               	decf	?_strlen+1,f
  1637  050F                     l706:
  1638  050F  0008               	return
  1639  0510                     __end_of_strlen:
  1640                           
  1641                           	psect	text5
  1642  04B5                     __ptext5:	
  1643 ;; *************** function _set_Cursor *****************
  1644 ;; Defined at:
  1645 ;;		line 72 in file "LCD.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  line            1    wreg     unsigned char 
  1648 ;;  pos             1    7[COMMON] unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  line            1    2[BANK0 ] unsigned char 
  1651 ;;  direction       1    3[BANK0 ] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         1       0       0       0       0
  1662 ;;      Locals:         0       2       0       0       0
  1663 ;;      Temps:          0       2       0       0       0
  1664 ;;      Totals:         1       4       0       0       0
  1665 ;;Total ram usage:        5 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 3
  1668 ;; This function calls:
  1669 ;;		_w_Instruction
  1670 ;; This function is called by:
  1671 ;;		_w_Titulos
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _set_Cursor
  1678  04B5                     _set_Cursor:
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1682                           ;set_Cursor@line stored from wreg
  1683  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1684  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1685  04B7  00A2               	movwf	set_Cursor@line
  1686  04B8                     l1248:
  1687                           
  1688                           ;LCD.c: 72: void set_Cursor(uint8_t line, uint8_t pos);LCD.c: 73: {;LCD.c: 74:     uint8
      +                          _t direction = 0b10000000;
  1689  04B8  3080               	movlw	128
  1690  04B9  00A0               	movwf	??_set_Cursor
  1691  04BA  0820               	movf	??_set_Cursor,w
  1692  04BB  00A3               	movwf	set_Cursor@direction
  1693  04BC                     l1250:
  1694                           
  1695                           ;LCD.c: 75:     line = line<<6;
  1696  04BC  0822               	movf	set_Cursor@line,w
  1697  04BD  00A0               	movwf	??_set_Cursor
  1698  04BE  3005               	movlw	5
  1699  04BF                     u485:
  1700  04BF  1003               	clrc
  1701  04C0  0DA0               	rlf	??_set_Cursor,f
  1702  04C1  3EFF               	addlw	-1
  1703  04C2  1D03               	skipz
  1704  04C3  2CBF               	goto	u485
  1705  04C4  1003               	clrc
  1706  04C5  0D20               	rlf	??_set_Cursor,w
  1707  04C6  00A1               	movwf	??_set_Cursor+1
  1708  04C7  0821               	movf	??_set_Cursor+1,w
  1709  04C8  00A2               	movwf	set_Cursor@line
  1710  04C9                     l1252:
  1711                           
  1712                           ;LCD.c: 76:     direction = direction | line | pos;
  1713  04C9  0823               	movf	set_Cursor@direction,w
  1714  04CA  0422               	iorwf	set_Cursor@line,w
  1715  04CB  0477               	iorwf	set_Cursor@pos,w
  1716  04CC  00A0               	movwf	??_set_Cursor
  1717  04CD  0820               	movf	??_set_Cursor,w
  1718  04CE  00A3               	movwf	set_Cursor@direction
  1719  04CF                     l1254:
  1720                           
  1721                           ;LCD.c: 77:     w_Instruction(direction);
  1722  04CF  0823               	movf	set_Cursor@direction,w
  1723  04D0  120A  118A  2567  120A  118A  	fcall	_w_Instruction
  1724  04D5                     l31:
  1725  04D5  0008               	return
  1726  04D6                     __end_of_set_Cursor:
  1727                           
  1728                           	psect	text6
  1729  0461                     __ptext6:	
  1730 ;; *************** function _map *****************
  1731 ;; Defined at:
  1732 ;;		line 194 in file "D2_Lab2.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  num             1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  num             1   16[BANK0 ] unsigned char 
  1737 ;;  res             2   17[BANK0 ] unsigned int 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2   12[BANK0 ] unsigned int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       2       0       0       0
  1748 ;;      Locals:         0       3       0       0       0
  1749 ;;      Temps:          0       2       0       0       0
  1750 ;;      Totals:         0       7       0       0       0
  1751 ;;Total ram usage:        7 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 2
  1754 ;; This function calls:
  1755 ;;		___awdiv
  1756 ;;		___wmul
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _map
  1764  0461                     _map:
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  1768                           ;map@num stored from wreg
  1769  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0463  00B0               	movwf	map@num
  1772  0464                     l1806:
  1773                           
  1774                           ;D2_Lab2.c: 194: uint16_t map(uint8_t num);D2_Lab2.c: 195: {;D2_Lab2.c: 196:     uint16_
      +                          t res;;D2_Lab2.c: 197:     res = num*100/51;
  1775  0464  3033               	movlw	51
  1776  0465  00A4               	movwf	___awdiv@divisor
  1777  0466  3000               	movlw	0
  1778  0467  00A5               	movwf	___awdiv@divisor+1
  1779  0468  0830               	movf	map@num,w
  1780  0469  00AE               	movwf	??_map
  1781  046A  01AF               	clrf	??_map+1
  1782  046B  082E               	movf	??_map,w
  1783  046C  00A0               	movwf	___wmul@multiplier
  1784  046D  082F               	movf	??_map+1,w
  1785  046E  00A1               	movwf	___wmul@multiplier+1
  1786  046F  3064               	movlw	100
  1787  0470  00A2               	movwf	___wmul@multiplicand
  1788  0471  3000               	movlw	0
  1789  0472  00A3               	movwf	___wmul@multiplicand+1
  1790  0473  120A  118A  248E  120A  118A  	fcall	___wmul
  1791  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1793  047A  0821               	movf	?___wmul+1,w
  1794  047B  00A7               	movwf	___awdiv@dividend+1
  1795  047C  0820               	movf	?___wmul,w
  1796  047D  00A6               	movwf	___awdiv@dividend
  1797  047E  120A  118A  21F5  120A  118A  	fcall	___awdiv
  1798  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0485  0825               	movf	?___awdiv+1,w
  1801  0486  00B2               	movwf	map@res+1
  1802  0487  0824               	movf	?___awdiv,w
  1803  0488  00B1               	movwf	map@res
  1804  0489                     l1808:
  1805                           
  1806                           ;D2_Lab2.c: 198:     return res;
  1807  0489  0832               	movf	map@res+1,w
  1808  048A  00AD               	movwf	?_map+1
  1809  048B  0831               	movf	map@res,w
  1810  048C  00AC               	movwf	?_map
  1811  048D                     l146:
  1812  048D  0008               	return
  1813  048E                     __end_of_map:
  1814                           
  1815                           	psect	text7
  1816  048E                     __ptext7:	
  1817 ;; *************** function ___wmul *****************
  1818 ;; Defined at:
  1819 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1822 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  product         2    5[COMMON] unsigned int 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    0[BANK0 ] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       4       0       0       0
  1835 ;;      Locals:         2       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         2       4       0       0       0
  1838 ;;Total ram usage:        6 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_map
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function ___wmul
  1850  048E                     ___wmul:
  1851  048E                     l1636:	
  1852                           ;incstack = 0
  1853                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1854                           
  1855  048E  01F5               	clrf	___wmul@product
  1856  048F  01F6               	clrf	___wmul@product+1
  1857  0490                     l1638:
  1858  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0492  1C20               	btfss	___wmul@multiplier,0
  1861  0493  2C95               	goto	u911
  1862  0494  2C96               	goto	u910
  1863  0495                     u911:
  1864  0495  2C9C               	goto	l252
  1865  0496                     u910:
  1866  0496                     l1640:
  1867  0496  0822               	movf	___wmul@multiplicand,w
  1868  0497  07F5               	addwf	___wmul@product,f
  1869  0498  1803               	skipnc
  1870  0499  0AF6               	incf	___wmul@product+1,f
  1871  049A  0823               	movf	___wmul@multiplicand+1,w
  1872  049B  07F6               	addwf	___wmul@product+1,f
  1873  049C                     l252:
  1874  049C  3001               	movlw	1
  1875  049D                     u925:
  1876  049D  1003               	clrc
  1877  049E  0DA2               	rlf	___wmul@multiplicand,f
  1878  049F  0DA3               	rlf	___wmul@multiplicand+1,f
  1879  04A0  3EFF               	addlw	-1
  1880  04A1  1D03               	skipz
  1881  04A2  2C9D               	goto	u925
  1882  04A3                     l1642:
  1883  04A3  3001               	movlw	1
  1884  04A4                     u935:
  1885  04A4  1003               	clrc
  1886  04A5  0CA1               	rrf	___wmul@multiplier+1,f
  1887  04A6  0CA0               	rrf	___wmul@multiplier,f
  1888  04A7  3EFF               	addlw	-1
  1889  04A8  1D03               	skipz
  1890  04A9  2CA4               	goto	u935
  1891  04AA                     l1644:
  1892  04AA  0820               	movf	___wmul@multiplier,w
  1893  04AB  0421               	iorwf	___wmul@multiplier+1,w
  1894  04AC  1D03               	btfss	3,2
  1895  04AD  2CAF               	goto	u941
  1896  04AE  2CB0               	goto	u940
  1897  04AF                     u941:
  1898  04AF  2C90               	goto	l1638
  1899  04B0                     u940:
  1900  04B0                     l1646:
  1901  04B0  0876               	movf	___wmul@product+1,w
  1902  04B1  00A1               	movwf	?___wmul+1
  1903  04B2  0875               	movf	___wmul@product,w
  1904  04B3  00A0               	movwf	?___wmul
  1905  04B4                     l254:
  1906  04B4  0008               	return
  1907  04B5                     __end_of___wmul:
  1908                           
  1909                           	psect	text8
  1910  0317                     __ptext8:	
  1911 ;; *************** function _ini_LCD *****************
  1912 ;; Defined at:
  1913 ;;		line 26 in file "LCD.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       2       0       0       0
  1930 ;;      Totals:         0       2       0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 3
  1934 ;; This function calls:
  1935 ;;		_w_Instruction
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           
  1942                           ;psect for function _ini_LCD
  1943  0317                     _ini_LCD:
  1944  0317                     l1780:	
  1945                           ;incstack = 0
  1946                           ; Regs used in _ini_LCD: [wreg+status,2+status,0+pclath+cstack]
  1947                           
  1948                           
  1949                           ;LCD.c: 28:     PORTCbits.RC0 = 0;
  1950  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0319  1007               	bcf	7,0	;volatile
  1953                           
  1954                           ;LCD.c: 29:     PORTCbits.RC1 = 0;
  1955  031A  1087               	bcf	7,1	;volatile
  1956  031B                     l1782:
  1957                           
  1958                           ;LCD.c: 30:     PORTA = 0;
  1959  031B  0185               	clrf	5	;volatile
  1960  031C                     l1784:
  1961                           
  1962                           ;LCD.c: 32:     _delay((unsigned long)((16)*(4000000/4000.0)));
  1963  031C  3015               	movlw	21
  1964  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1965  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1966  031F  00A1               	movwf	??_ini_LCD+1
  1967  0320  30C5               	movlw	197
  1968  0321  00A0               	movwf	??_ini_LCD
  1969  0322                     u1307:
  1970  0322  0BA0               	decfsz	??_ini_LCD,f
  1971  0323  2B22               	goto	u1307
  1972  0324  0BA1               	decfsz	??_ini_LCD+1,f
  1973  0325  2B22               	goto	u1307
  1974  0326  2B27               	nop2
  1975  0327                     l1786:
  1976                           
  1977                           ;LCD.c: 33:     w_Instruction(0b00110000);
  1978  0327  3030               	movlw	48
  1979  0328  120A  118A  2567  120A  118A  	fcall	_w_Instruction
  1980  032D                     l1788:
  1981                           
  1982                           ;LCD.c: 34:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1983  032D  3007               	movlw	7
  1984  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1985  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0330  00A1               	movwf	??_ini_LCD+1
  1987  0331  307C               	movlw	124
  1988  0332  00A0               	movwf	??_ini_LCD
  1989  0333                     u1317:
  1990  0333  0BA0               	decfsz	??_ini_LCD,f
  1991  0334  2B33               	goto	u1317
  1992  0335  0BA1               	decfsz	??_ini_LCD+1,f
  1993  0336  2B33               	goto	u1317
  1994  0337  0000               	nop
  1995  0338                     l1790:
  1996                           
  1997                           ;LCD.c: 35:     w_Instruction(0b00110000);
  1998  0338  3030               	movlw	48
  1999  0339  120A  118A  2567  120A  118A  	fcall	_w_Instruction
  2000  033E                     l1792:
  2001                           
  2002                           ;LCD.c: 36:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2003  033E  3041               	movlw	65
  2004  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0341  00A0               	movwf	??_ini_LCD
  2007  0342                     u1327:
  2008  0342  0BA0               	decfsz	??_ini_LCD,f
  2009  0343  2B42               	goto	u1327
  2010  0344  2B45               	nop2
  2011  0345                     l1794:
  2012                           
  2013                           ;LCD.c: 37:     w_Instruction(0b00110000);
  2014  0345  3030               	movlw	48
  2015  0346  120A  118A  2567  120A  118A  	fcall	_w_Instruction
  2016  034B                     l1796:
  2017                           
  2018                           ;LCD.c: 39:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2019  034B  3006               	movlw	6
  2020  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2021  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2022  034E  00A1               	movwf	??_ini_LCD+1
  2023  034F  302F               	movlw	47
  2024  0350  00A0               	movwf	??_ini_LCD
  2025  0351                     u1337:
  2026  0351  0BA0               	decfsz	??_ini_LCD,f
  2027  0352  2B51               	goto	u1337
  2028  0353  0BA1               	decfsz	??_ini_LCD+1,f
  2029  0354  2B51               	goto	u1337
  2030  0355  2B56               	nop2
  2031  0356                     l1798:
  2032                           
  2033                           ;LCD.c: 40:     w_Instruction(0b00111000);
  2034  0356  3038               	movlw	56
  2035  0357  120A  118A  2567  120A  118A  	fcall	_w_Instruction
  2036  035C                     l1800:
  2037                           
  2038                           ;LCD.c: 42:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2039  035C  3006               	movlw	6
  2040  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2041  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2042  035F  00A1               	movwf	??_ini_LCD+1
  2043  0360  302F               	movlw	47
  2044  0361  00A0               	movwf	??_ini_LCD
  2045  0362                     u1347:
  2046  0362  0BA0               	decfsz	??_ini_LCD,f
  2047  0363  2B62               	goto	u1347
  2048  0364  0BA1               	decfsz	??_ini_LCD+1,f
  2049  0365  2B62               	goto	u1347
  2050  0366  2B67               	nop2
  2051  0367                     l1802:
  2052                           
  2053                           ;LCD.c: 43:     w_Instruction(0b00001100);
  2054  0367  300C               	movlw	12
  2055  0368  120A  118A  2567  120A  118A  	fcall	_w_Instruction
  2056  036D                     l16:
  2057  036D  0008               	return
  2058  036E                     __end_of_ini_LCD:
  2059                           
  2060                           	psect	text9
  2061  0567                     __ptext9:	
  2062 ;; *************** function _w_Instruction *****************
  2063 ;; Defined at:
  2064 ;;		line 47 in file "LCD.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  instruction     1    wreg     unsigned char 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  instruction     1    6[COMMON] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       0       0       0
  2079 ;;      Locals:         1       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0
  2081 ;;      Totals:         1       0       0       0       0
  2082 ;;Total ram usage:        1 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 2
  2085 ;; This function calls:
  2086 ;;		_pulse_E
  2087 ;; This function is called by:
  2088 ;;		_ini_LCD
  2089 ;;		_set_Cursor
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _w_Instruction
  2095  0567                     _w_Instruction:
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _w_Instruction: [wreg+status,2+status,0+pclath+cstack]
  2099                           ;w_Instruction@instruction stored from wreg
  2100  0567  00F6               	movwf	w_Instruction@instruction
  2101  0568                     l1214:
  2102                           
  2103                           ;LCD.c: 47: void w_Instruction(uint8_t instruction);LCD.c: 48: {;LCD.c: 49:     PORTCbit
      +                          s.RC0 = 0;
  2104  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2106  056A  1007               	bcf	7,0	;volatile
  2107  056B                     l1216:
  2108                           
  2109                           ;LCD.c: 50:     PORTA = instruction;
  2110  056B  0876               	movf	w_Instruction@instruction,w
  2111  056C  0085               	movwf	5	;volatile
  2112  056D                     l1218:
  2113                           
  2114                           ;LCD.c: 51:     pulse_E();
  2115  056D  120A  118A  2573  120A  118A  	fcall	_pulse_E
  2116  0572                     l19:
  2117  0572  0008               	return
  2118  0573                     __end_of_w_Instruction:
  2119                           
  2120                           	psect	text10
  2121  0573                     __ptext10:	
  2122 ;; *************** function _pulse_E *****************
  2123 ;; Defined at:
  2124 ;;		line 18 in file "LCD.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0
  2140 ;;      Temps:          1       0       0       0       0
  2141 ;;      Totals:         1       0       0       0       0
  2142 ;;Total ram usage:        1 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_w_Instruction
  2149 ;;		_w_Char
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _pulse_E
  2155  0573                     _pulse_E:
  2156  0573                     l1206:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _pulse_E: [wreg]
  2159                           
  2160                           
  2161                           ;LCD.c: 20:     PORTCbits.RC1 = 1;
  2162  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0575  1487               	bsf	7,1	;volatile
  2165  0576                     l1208:
  2166                           
  2167                           ;LCD.c: 21:     _delay((unsigned long)((0.5)*(4000000/4000.0)));
  2168  0576  30A6               	movlw	166
  2169  0577  00F5               	movwf	??_pulse_E
  2170  0578                     u1357:
  2171  0578  0BF5               	decfsz	??_pulse_E,f
  2172  0579  2D78               	goto	u1357
  2173  057A  0000               	nop
  2174  057B                     l1210:
  2175                           
  2176                           ;LCD.c: 22:     PORTCbits.RC1 = 0;
  2177  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2178  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2179  057D  1087               	bcf	7,1	;volatile
  2180  057E                     l13:
  2181  057E  0008               	return
  2182  057F                     __end_of_pulse_E:
  2183                           
  2184                           	psect	text11
  2185  025E                     __ptext11:	
  2186 ;; *************** function _divisor *****************
  2187 ;; Defined at:
  2188 ;;		line 201 in file "D2_Lab2.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  num             2   12[BANK0 ] unsigned int 
  2191 ;;  centena         1   14[BANK0 ] PTR unsigned char 
  2192 ;;		 -> cont(6), pot1(6), pot2(6), 
  2193 ;;  decena          1   15[BANK0 ] PTR unsigned char 
  2194 ;;		 -> cont(6), pot1(6), pot2(6), 
  2195 ;;  unidad          1   16[BANK0 ] PTR unsigned char 
  2196 ;;		 -> cont(6), pot1(6), pot2(6), 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  aux             1   20[BANK0 ] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2208 ;;      Params:         0       5       0       0       0
  2209 ;;      Locals:         0       1       0       0       0
  2210 ;;      Temps:          0       3       0       0       0
  2211 ;;      Totals:         0       9       0       0       0
  2212 ;;Total ram usage:        9 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 2
  2215 ;; This function calls:
  2216 ;;		___awdiv
  2217 ;;		___awmod
  2218 ;;		___lwdiv
  2219 ;;		___lwmod
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _divisor
  2227  025E                     _divisor:
  2228  025E                     l1812:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2231                           
  2232                           
  2233                           ;D2_Lab2.c: 201: void divisor(uint16_t num, uint8_t *centena, uint8_t *decena, uint8_t *
      +                          unidad);D2_Lab2.c: 202: {;D2_Lab2.c: 203:     *centena = num / 100;
  2234  025E  3064               	movlw	100
  2235  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0261  00A0               	movwf	___lwdiv@divisor
  2238  0262  3000               	movlw	0
  2239  0263  00A1               	movwf	___lwdiv@divisor+1
  2240  0264  082D               	movf	divisor@num+1,w
  2241  0265  00A3               	movwf	___lwdiv@dividend+1
  2242  0266  082C               	movf	divisor@num,w
  2243  0267  00A2               	movwf	___lwdiv@dividend
  2244  0268  120A  118A  236E  120A  118A  	fcall	___lwdiv
  2245  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2246  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2247  026F  0820               	movf	?___lwdiv,w
  2248  0270  00B1               	movwf	??_divisor
  2249  0271  082E               	movf	divisor@centena,w
  2250  0272  0084               	movwf	4
  2251  0273  0831               	movf	??_divisor,w
  2252  0274  1383               	bcf	3,7	;select IRP bank0
  2253  0275  0080               	movwf	0
  2254  0276                     l1814:
  2255                           
  2256                           ;D2_Lab2.c: 204:     uint8_t aux = num % 100;
  2257  0276  3064               	movlw	100
  2258  0277  00A0               	movwf	___lwmod@divisor
  2259  0278  3000               	movlw	0
  2260  0279  00A1               	movwf	___lwmod@divisor+1
  2261  027A  082D               	movf	divisor@num+1,w
  2262  027B  00A3               	movwf	___lwmod@dividend+1
  2263  027C  082C               	movf	divisor@num,w
  2264  027D  00A2               	movwf	___lwmod@dividend
  2265  027E  120A  118A  23F8  120A  118A  	fcall	___lwmod
  2266  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0285  0820               	movf	?___lwmod,w
  2269  0286  00B1               	movwf	??_divisor
  2270  0287  0831               	movf	??_divisor,w
  2271  0288  00B4               	movwf	divisor@aux
  2272  0289                     l1816:
  2273                           
  2274                           ;D2_Lab2.c: 205:     *decena = aux / 10;
  2275  0289  300A               	movlw	10
  2276  028A  00A4               	movwf	___awdiv@divisor
  2277  028B  3000               	movlw	0
  2278  028C  00A5               	movwf	___awdiv@divisor+1
  2279  028D  0834               	movf	divisor@aux,w
  2280  028E  00B1               	movwf	??_divisor
  2281  028F  01B2               	clrf	??_divisor+1
  2282  0290  0831               	movf	??_divisor,w
  2283  0291  00A6               	movwf	___awdiv@dividend
  2284  0292  0832               	movf	??_divisor+1,w
  2285  0293  00A7               	movwf	___awdiv@dividend+1
  2286  0294  120A  118A  21F5  120A  118A  	fcall	___awdiv
  2287  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2288  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2289  029B  0824               	movf	?___awdiv,w
  2290  029C  00B3               	movwf	??_divisor+2
  2291  029D  082F               	movf	divisor@decena,w
  2292  029E  0084               	movwf	4
  2293  029F  0833               	movf	??_divisor+2,w
  2294  02A0  1383               	bcf	3,7	;select IRP bank0
  2295  02A1  0080               	movwf	0
  2296  02A2                     l1818:
  2297                           
  2298                           ;D2_Lab2.c: 206:     *unidad = aux % 10;
  2299  02A2  300A               	movlw	10
  2300  02A3  00A0               	movwf	___awmod@divisor
  2301  02A4  3000               	movlw	0
  2302  02A5  00A1               	movwf	___awmod@divisor+1
  2303  02A6  0834               	movf	divisor@aux,w
  2304  02A7  00B1               	movwf	??_divisor
  2305  02A8  01B2               	clrf	??_divisor+1
  2306  02A9  0831               	movf	??_divisor,w
  2307  02AA  00A2               	movwf	___awmod@dividend
  2308  02AB  0832               	movf	??_divisor+1,w
  2309  02AC  00A3               	movwf	___awmod@dividend+1
  2310  02AD  120A  118A  22BC  120A  118A  	fcall	___awmod
  2311  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2312  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2313  02B4  0820               	movf	?___awmod,w
  2314  02B5  00B3               	movwf	??_divisor+2
  2315  02B6  0830               	movf	divisor@unidad,w
  2316  02B7  0084               	movwf	4
  2317  02B8  0833               	movf	??_divisor+2,w
  2318  02B9  1383               	bcf	3,7	;select IRP bank0
  2319  02BA  0080               	movwf	0
  2320  02BB                     l149:
  2321  02BB  0008               	return
  2322  02BC                     __end_of_divisor:
  2323                           
  2324                           	psect	text12
  2325  03F8                     __ptext12:	
  2326 ;; *************** function ___lwmod *****************
  2327 ;; Defined at:
  2328 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  divisor         2    0[BANK0 ] unsigned int 
  2331 ;;  dividend        2    2[BANK0 ] unsigned int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  counter         1    6[COMMON] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  2    0[BANK0 ] unsigned int 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       4       0       0       0
  2344 ;;      Locals:         1       0       0       0       0
  2345 ;;      Temps:          1       0       0       0       0
  2346 ;;      Totals:         2       4       0       0       0
  2347 ;;Total ram usage:        6 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_divisor
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function ___lwmod
  2359  03F8                     ___lwmod:
  2360  03F8                     l1758:	
  2361                           ;incstack = 0
  2362                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2363                           
  2364  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2365  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2366  03FA  0820               	movf	___lwmod@divisor,w
  2367  03FB  0421               	iorwf	___lwmod@divisor+1,w
  2368  03FC  1903               	btfsc	3,2
  2369  03FD  2BFF               	goto	u1211
  2370  03FE  2C00               	goto	u1210
  2371  03FF                     u1211:
  2372  03FF  2C2F               	goto	l1776
  2373  0400                     u1210:
  2374  0400                     l1760:
  2375  0400  01F6               	clrf	___lwmod@counter
  2376  0401  0AF6               	incf	___lwmod@counter,f
  2377  0402  2C0E               	goto	l1766
  2378  0403                     l1762:
  2379  0403  3001               	movlw	1
  2380  0404                     u1225:
  2381  0404  1003               	clrc
  2382  0405  0DA0               	rlf	___lwmod@divisor,f
  2383  0406  0DA1               	rlf	___lwmod@divisor+1,f
  2384  0407  3EFF               	addlw	-1
  2385  0408  1D03               	skipz
  2386  0409  2C04               	goto	u1225
  2387  040A                     l1764:
  2388  040A  3001               	movlw	1
  2389  040B  00F5               	movwf	??___lwmod
  2390  040C  0875               	movf	??___lwmod,w
  2391  040D  07F6               	addwf	___lwmod@counter,f
  2392  040E                     l1766:
  2393  040E  1FA1               	btfss	___lwmod@divisor+1,7
  2394  040F  2C11               	goto	u1231
  2395  0410  2C12               	goto	u1230
  2396  0411                     u1231:
  2397  0411  2C03               	goto	l1762
  2398  0412                     u1230:
  2399  0412                     l1768:
  2400  0412  0821               	movf	___lwmod@divisor+1,w
  2401  0413  0223               	subwf	___lwmod@dividend+1,w
  2402  0414  1D03               	skipz
  2403  0415  2C18               	goto	u1245
  2404  0416  0820               	movf	___lwmod@divisor,w
  2405  0417  0222               	subwf	___lwmod@dividend,w
  2406  0418                     u1245:
  2407  0418  1C03               	skipc
  2408  0419  2C1B               	goto	u1241
  2409  041A  2C1C               	goto	u1240
  2410  041B                     u1241:
  2411  041B  2C22               	goto	l1772
  2412  041C                     u1240:
  2413  041C                     l1770:
  2414  041C  0820               	movf	___lwmod@divisor,w
  2415  041D  02A2               	subwf	___lwmod@dividend,f
  2416  041E  0821               	movf	___lwmod@divisor+1,w
  2417  041F  1C03               	skipc
  2418  0420  03A3               	decf	___lwmod@dividend+1,f
  2419  0421  02A3               	subwf	___lwmod@dividend+1,f
  2420  0422                     l1772:
  2421  0422  3001               	movlw	1
  2422  0423                     u1255:
  2423  0423  1003               	clrc
  2424  0424  0CA1               	rrf	___lwmod@divisor+1,f
  2425  0425  0CA0               	rrf	___lwmod@divisor,f
  2426  0426  3EFF               	addlw	-1
  2427  0427  1D03               	skipz
  2428  0428  2C23               	goto	u1255
  2429  0429                     l1774:
  2430  0429  3001               	movlw	1
  2431  042A  02F6               	subwf	___lwmod@counter,f
  2432  042B  1D03               	btfss	3,2
  2433  042C  2C2E               	goto	u1261
  2434  042D  2C2F               	goto	u1260
  2435  042E                     u1261:
  2436  042E  2C12               	goto	l1768
  2437  042F                     u1260:
  2438  042F                     l1776:
  2439  042F  0823               	movf	___lwmod@dividend+1,w
  2440  0430  00A1               	movwf	?___lwmod+1
  2441  0431  0822               	movf	___lwmod@dividend,w
  2442  0432  00A0               	movwf	?___lwmod
  2443  0433                     l534:
  2444  0433  0008               	return
  2445  0434                     __end_of___lwmod:
  2446                           
  2447                           	psect	text13
  2448  036E                     __ptext13:	
  2449 ;; *************** function ___lwdiv *****************
  2450 ;; Defined at:
  2451 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  divisor         2    0[BANK0 ] unsigned int 
  2454 ;;  dividend        2    2[BANK0 ] unsigned int 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  quotient        2    5[BANK0 ] unsigned int 
  2457 ;;  counter         1    4[BANK0 ] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  2    0[BANK0 ] unsigned int 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2467 ;;      Params:         0       4       0       0       0
  2468 ;;      Locals:         0       3       0       0       0
  2469 ;;      Temps:          1       0       0       0       0
  2470 ;;      Totals:         1       7       0       0       0
  2471 ;;Total ram usage:        8 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_divisor
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function ___lwdiv
  2483  036E                     ___lwdiv:
  2484  036E                     l1732:	
  2485                           ;incstack = 0
  2486                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2487                           
  2488  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2489  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0370  01A5               	clrf	___lwdiv@quotient
  2491  0371  01A6               	clrf	___lwdiv@quotient+1
  2492  0372                     l1734:
  2493  0372  0820               	movf	___lwdiv@divisor,w
  2494  0373  0421               	iorwf	___lwdiv@divisor+1,w
  2495  0374  1903               	btfsc	3,2
  2496  0375  2B77               	goto	u1141
  2497  0376  2B78               	goto	u1140
  2498  0377                     u1141:
  2499  0377  2BAF               	goto	l1754
  2500  0378                     u1140:
  2501  0378                     l1736:
  2502  0378  01A4               	clrf	___lwdiv@counter
  2503  0379  0AA4               	incf	___lwdiv@counter,f
  2504  037A  2B86               	goto	l1742
  2505  037B                     l1738:
  2506  037B  3001               	movlw	1
  2507  037C                     u1155:
  2508  037C  1003               	clrc
  2509  037D  0DA0               	rlf	___lwdiv@divisor,f
  2510  037E  0DA1               	rlf	___lwdiv@divisor+1,f
  2511  037F  3EFF               	addlw	-1
  2512  0380  1D03               	skipz
  2513  0381  2B7C               	goto	u1155
  2514  0382                     l1740:
  2515  0382  3001               	movlw	1
  2516  0383  00F5               	movwf	??___lwdiv
  2517  0384  0875               	movf	??___lwdiv,w
  2518  0385  07A4               	addwf	___lwdiv@counter,f
  2519  0386                     l1742:
  2520  0386  1FA1               	btfss	___lwdiv@divisor+1,7
  2521  0387  2B89               	goto	u1161
  2522  0388  2B8A               	goto	u1160
  2523  0389                     u1161:
  2524  0389  2B7B               	goto	l1738
  2525  038A                     u1160:
  2526  038A                     l1744:
  2527  038A  3001               	movlw	1
  2528  038B                     u1175:
  2529  038B  1003               	clrc
  2530  038C  0DA5               	rlf	___lwdiv@quotient,f
  2531  038D  0DA6               	rlf	___lwdiv@quotient+1,f
  2532  038E  3EFF               	addlw	-1
  2533  038F  1D03               	skipz
  2534  0390  2B8B               	goto	u1175
  2535  0391  0821               	movf	___lwdiv@divisor+1,w
  2536  0392  0223               	subwf	___lwdiv@dividend+1,w
  2537  0393  1D03               	skipz
  2538  0394  2B97               	goto	u1185
  2539  0395  0820               	movf	___lwdiv@divisor,w
  2540  0396  0222               	subwf	___lwdiv@dividend,w
  2541  0397                     u1185:
  2542  0397  1C03               	skipc
  2543  0398  2B9A               	goto	u1181
  2544  0399  2B9B               	goto	u1180
  2545  039A                     u1181:
  2546  039A  2BA2               	goto	l1750
  2547  039B                     u1180:
  2548  039B                     l1746:
  2549  039B  0820               	movf	___lwdiv@divisor,w
  2550  039C  02A2               	subwf	___lwdiv@dividend,f
  2551  039D  0821               	movf	___lwdiv@divisor+1,w
  2552  039E  1C03               	skipc
  2553  039F  03A3               	decf	___lwdiv@dividend+1,f
  2554  03A0  02A3               	subwf	___lwdiv@dividend+1,f
  2555  03A1                     l1748:
  2556  03A1  1425               	bsf	___lwdiv@quotient,0
  2557  03A2                     l1750:
  2558  03A2  3001               	movlw	1
  2559  03A3                     u1195:
  2560  03A3  1003               	clrc
  2561  03A4  0CA1               	rrf	___lwdiv@divisor+1,f
  2562  03A5  0CA0               	rrf	___lwdiv@divisor,f
  2563  03A6  3EFF               	addlw	-1
  2564  03A7  1D03               	skipz
  2565  03A8  2BA3               	goto	u1195
  2566  03A9                     l1752:
  2567  03A9  3001               	movlw	1
  2568  03AA  02A4               	subwf	___lwdiv@counter,f
  2569  03AB  1D03               	btfss	3,2
  2570  03AC  2BAE               	goto	u1201
  2571  03AD  2BAF               	goto	u1200
  2572  03AE                     u1201:
  2573  03AE  2B8A               	goto	l1744
  2574  03AF                     u1200:
  2575  03AF                     l1754:
  2576  03AF  0826               	movf	___lwdiv@quotient+1,w
  2577  03B0  00A1               	movwf	?___lwdiv+1
  2578  03B1  0825               	movf	___lwdiv@quotient,w
  2579  03B2  00A0               	movwf	?___lwdiv
  2580  03B3                     l524:
  2581  03B3  0008               	return
  2582  03B4                     __end_of___lwdiv:
  2583                           
  2584                           	psect	text14
  2585  02BC                     __ptext14:	
  2586 ;; *************** function ___awmod *****************
  2587 ;; Defined at:
  2588 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  divisor         2    0[BANK0 ] int 
  2591 ;;  dividend        2    2[BANK0 ] int 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  sign            1    7[COMMON] unsigned char 
  2594 ;;  counter         1    6[COMMON] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2    0[BANK0 ] int 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         0       4       0       0       0
  2605 ;;      Locals:         2       0       0       0       0
  2606 ;;      Temps:          1       0       0       0       0
  2607 ;;      Totals:         3       4       0       0       0
  2608 ;;Total ram usage:        7 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 1
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_divisor
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function ___awmod
  2620  02BC                     ___awmod:
  2621  02BC                     l1694:	
  2622                           ;incstack = 0
  2623                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2624                           
  2625  02BC  01F7               	clrf	___awmod@sign
  2626  02BD                     l1696:
  2627  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2628  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2629  02BF  1FA3               	btfss	___awmod@dividend+1,7
  2630  02C0  2AC2               	goto	u1051
  2631  02C1  2AC3               	goto	u1050
  2632  02C2                     u1051:
  2633  02C2  2ACA               	goto	l1702
  2634  02C3                     u1050:
  2635  02C3                     l1698:
  2636  02C3  09A2               	comf	___awmod@dividend,f
  2637  02C4  09A3               	comf	___awmod@dividend+1,f
  2638  02C5  0AA2               	incf	___awmod@dividend,f
  2639  02C6  1903               	skipnz
  2640  02C7  0AA3               	incf	___awmod@dividend+1,f
  2641  02C8                     l1700:
  2642  02C8  01F7               	clrf	___awmod@sign
  2643  02C9  0AF7               	incf	___awmod@sign,f
  2644  02CA                     l1702:
  2645  02CA  1FA1               	btfss	___awmod@divisor+1,7
  2646  02CB  2ACD               	goto	u1061
  2647  02CC  2ACE               	goto	u1060
  2648  02CD                     u1061:
  2649  02CD  2AD3               	goto	l1706
  2650  02CE                     u1060:
  2651  02CE                     l1704:
  2652  02CE  09A0               	comf	___awmod@divisor,f
  2653  02CF  09A1               	comf	___awmod@divisor+1,f
  2654  02D0  0AA0               	incf	___awmod@divisor,f
  2655  02D1  1903               	skipnz
  2656  02D2  0AA1               	incf	___awmod@divisor+1,f
  2657  02D3                     l1706:
  2658  02D3  0820               	movf	___awmod@divisor,w
  2659  02D4  0421               	iorwf	___awmod@divisor+1,w
  2660  02D5  1903               	btfsc	3,2
  2661  02D6  2AD8               	goto	u1071
  2662  02D7  2AD9               	goto	u1070
  2663  02D8                     u1071:
  2664  02D8  2B08               	goto	l1724
  2665  02D9                     u1070:
  2666  02D9                     l1708:
  2667  02D9  01F6               	clrf	___awmod@counter
  2668  02DA  0AF6               	incf	___awmod@counter,f
  2669  02DB  2AE7               	goto	l1714
  2670  02DC                     l1710:
  2671  02DC  3001               	movlw	1
  2672  02DD                     u1085:
  2673  02DD  1003               	clrc
  2674  02DE  0DA0               	rlf	___awmod@divisor,f
  2675  02DF  0DA1               	rlf	___awmod@divisor+1,f
  2676  02E0  3EFF               	addlw	-1
  2677  02E1  1D03               	skipz
  2678  02E2  2ADD               	goto	u1085
  2679  02E3                     l1712:
  2680  02E3  3001               	movlw	1
  2681  02E4  00F5               	movwf	??___awmod
  2682  02E5  0875               	movf	??___awmod,w
  2683  02E6  07F6               	addwf	___awmod@counter,f
  2684  02E7                     l1714:
  2685  02E7  1FA1               	btfss	___awmod@divisor+1,7
  2686  02E8  2AEA               	goto	u1091
  2687  02E9  2AEB               	goto	u1090
  2688  02EA                     u1091:
  2689  02EA  2ADC               	goto	l1710
  2690  02EB                     u1090:
  2691  02EB                     l1716:
  2692  02EB  0821               	movf	___awmod@divisor+1,w
  2693  02EC  0223               	subwf	___awmod@dividend+1,w
  2694  02ED  1D03               	skipz
  2695  02EE  2AF1               	goto	u1105
  2696  02EF  0820               	movf	___awmod@divisor,w
  2697  02F0  0222               	subwf	___awmod@dividend,w
  2698  02F1                     u1105:
  2699  02F1  1C03               	skipc
  2700  02F2  2AF4               	goto	u1101
  2701  02F3  2AF5               	goto	u1100
  2702  02F4                     u1101:
  2703  02F4  2AFB               	goto	l1720
  2704  02F5                     u1100:
  2705  02F5                     l1718:
  2706  02F5  0820               	movf	___awmod@divisor,w
  2707  02F6  02A2               	subwf	___awmod@dividend,f
  2708  02F7  0821               	movf	___awmod@divisor+1,w
  2709  02F8  1C03               	skipc
  2710  02F9  03A3               	decf	___awmod@dividend+1,f
  2711  02FA  02A3               	subwf	___awmod@dividend+1,f
  2712  02FB                     l1720:
  2713  02FB  3001               	movlw	1
  2714  02FC                     u1115:
  2715  02FC  1003               	clrc
  2716  02FD  0CA1               	rrf	___awmod@divisor+1,f
  2717  02FE  0CA0               	rrf	___awmod@divisor,f
  2718  02FF  3EFF               	addlw	-1
  2719  0300  1D03               	skipz
  2720  0301  2AFC               	goto	u1115
  2721  0302                     l1722:
  2722  0302  3001               	movlw	1
  2723  0303  02F6               	subwf	___awmod@counter,f
  2724  0304  1D03               	btfss	3,2
  2725  0305  2B07               	goto	u1121
  2726  0306  2B08               	goto	u1120
  2727  0307                     u1121:
  2728  0307  2AEB               	goto	l1716
  2729  0308                     u1120:
  2730  0308                     l1724:
  2731  0308  0877               	movf	___awmod@sign,w
  2732  0309  1903               	btfsc	3,2
  2733  030A  2B0C               	goto	u1131
  2734  030B  2B0D               	goto	u1130
  2735  030C                     u1131:
  2736  030C  2B12               	goto	l1728
  2737  030D                     u1130:
  2738  030D                     l1726:
  2739  030D  09A2               	comf	___awmod@dividend,f
  2740  030E  09A3               	comf	___awmod@dividend+1,f
  2741  030F  0AA2               	incf	___awmod@dividend,f
  2742  0310  1903               	skipnz
  2743  0311  0AA3               	incf	___awmod@dividend+1,f
  2744  0312                     l1728:
  2745  0312  0823               	movf	___awmod@dividend+1,w
  2746  0313  00A1               	movwf	?___awmod+1
  2747  0314  0822               	movf	___awmod@dividend,w
  2748  0315  00A0               	movwf	?___awmod
  2749  0316                     l418:
  2750  0316  0008               	return
  2751  0317                     __end_of___awmod:
  2752                           
  2753                           	psect	text15
  2754  01F5                     __ptext15:	
  2755 ;; *************** function ___awdiv *****************
  2756 ;; Defined at:
  2757 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  divisor         2    4[BANK0 ] int 
  2760 ;;  dividend        2    6[BANK0 ] int 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  quotient        2   10[BANK0 ] int 
  2763 ;;  sign            1    9[BANK0 ] unsigned char 
  2764 ;;  counter         1    8[BANK0 ] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  2    4[BANK0 ] int 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       4       0       0       0
  2775 ;;      Locals:         0       4       0       0       0
  2776 ;;      Temps:          1       0       0       0       0
  2777 ;;      Totals:         1       8       0       0       0
  2778 ;;Total ram usage:        9 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_map
  2785 ;;		_divisor
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function ___awdiv
  2791  01F5                     ___awdiv:
  2792  01F5                     l1650:	
  2793                           ;incstack = 0
  2794                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2795                           
  2796  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2797  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2798  01F7  01A9               	clrf	___awdiv@sign
  2799  01F8                     l1652:
  2800  01F8  1FA5               	btfss	___awdiv@divisor+1,7
  2801  01F9  29FB               	goto	u951
  2802  01FA  29FC               	goto	u950
  2803  01FB                     u951:
  2804  01FB  2A03               	goto	l1658
  2805  01FC                     u950:
  2806  01FC                     l1654:
  2807  01FC  09A4               	comf	___awdiv@divisor,f
  2808  01FD  09A5               	comf	___awdiv@divisor+1,f
  2809  01FE  0AA4               	incf	___awdiv@divisor,f
  2810  01FF  1903               	skipnz
  2811  0200  0AA5               	incf	___awdiv@divisor+1,f
  2812  0201                     l1656:
  2813  0201  01A9               	clrf	___awdiv@sign
  2814  0202  0AA9               	incf	___awdiv@sign,f
  2815  0203                     l1658:
  2816  0203  1FA7               	btfss	___awdiv@dividend+1,7
  2817  0204  2A06               	goto	u961
  2818  0205  2A07               	goto	u960
  2819  0206                     u961:
  2820  0206  2A10               	goto	l1664
  2821  0207                     u960:
  2822  0207                     l1660:
  2823  0207  09A6               	comf	___awdiv@dividend,f
  2824  0208  09A7               	comf	___awdiv@dividend+1,f
  2825  0209  0AA6               	incf	___awdiv@dividend,f
  2826  020A  1903               	skipnz
  2827  020B  0AA7               	incf	___awdiv@dividend+1,f
  2828  020C                     l1662:
  2829  020C  3001               	movlw	1
  2830  020D  00F7               	movwf	??___awdiv
  2831  020E  0877               	movf	??___awdiv,w
  2832  020F  06A9               	xorwf	___awdiv@sign,f
  2833  0210                     l1664:
  2834  0210  01AA               	clrf	___awdiv@quotient
  2835  0211  01AB               	clrf	___awdiv@quotient+1
  2836  0212                     l1666:
  2837  0212  0824               	movf	___awdiv@divisor,w
  2838  0213  0425               	iorwf	___awdiv@divisor+1,w
  2839  0214  1903               	btfsc	3,2
  2840  0215  2A17               	goto	u971
  2841  0216  2A18               	goto	u970
  2842  0217                     u971:
  2843  0217  2A4F               	goto	l1686
  2844  0218                     u970:
  2845  0218                     l1668:
  2846  0218  01A8               	clrf	___awdiv@counter
  2847  0219  0AA8               	incf	___awdiv@counter,f
  2848  021A  2A26               	goto	l1674
  2849  021B                     l1670:
  2850  021B  3001               	movlw	1
  2851  021C                     u985:
  2852  021C  1003               	clrc
  2853  021D  0DA4               	rlf	___awdiv@divisor,f
  2854  021E  0DA5               	rlf	___awdiv@divisor+1,f
  2855  021F  3EFF               	addlw	-1
  2856  0220  1D03               	skipz
  2857  0221  2A1C               	goto	u985
  2858  0222                     l1672:
  2859  0222  3001               	movlw	1
  2860  0223  00F7               	movwf	??___awdiv
  2861  0224  0877               	movf	??___awdiv,w
  2862  0225  07A8               	addwf	___awdiv@counter,f
  2863  0226                     l1674:
  2864  0226  1FA5               	btfss	___awdiv@divisor+1,7
  2865  0227  2A29               	goto	u991
  2866  0228  2A2A               	goto	u990
  2867  0229                     u991:
  2868  0229  2A1B               	goto	l1670
  2869  022A                     u990:
  2870  022A                     l1676:
  2871  022A  3001               	movlw	1
  2872  022B                     u1005:
  2873  022B  1003               	clrc
  2874  022C  0DAA               	rlf	___awdiv@quotient,f
  2875  022D  0DAB               	rlf	___awdiv@quotient+1,f
  2876  022E  3EFF               	addlw	-1
  2877  022F  1D03               	skipz
  2878  0230  2A2B               	goto	u1005
  2879  0231  0825               	movf	___awdiv@divisor+1,w
  2880  0232  0227               	subwf	___awdiv@dividend+1,w
  2881  0233  1D03               	skipz
  2882  0234  2A37               	goto	u1015
  2883  0235  0824               	movf	___awdiv@divisor,w
  2884  0236  0226               	subwf	___awdiv@dividend,w
  2885  0237                     u1015:
  2886  0237  1C03               	skipc
  2887  0238  2A3A               	goto	u1011
  2888  0239  2A3B               	goto	u1010
  2889  023A                     u1011:
  2890  023A  2A42               	goto	l1682
  2891  023B                     u1010:
  2892  023B                     l1678:
  2893  023B  0824               	movf	___awdiv@divisor,w
  2894  023C  02A6               	subwf	___awdiv@dividend,f
  2895  023D  0825               	movf	___awdiv@divisor+1,w
  2896  023E  1C03               	skipc
  2897  023F  03A7               	decf	___awdiv@dividend+1,f
  2898  0240  02A7               	subwf	___awdiv@dividend+1,f
  2899  0241                     l1680:
  2900  0241  142A               	bsf	___awdiv@quotient,0
  2901  0242                     l1682:
  2902  0242  3001               	movlw	1
  2903  0243                     u1025:
  2904  0243  1003               	clrc
  2905  0244  0CA5               	rrf	___awdiv@divisor+1,f
  2906  0245  0CA4               	rrf	___awdiv@divisor,f
  2907  0246  3EFF               	addlw	-1
  2908  0247  1D03               	skipz
  2909  0248  2A43               	goto	u1025
  2910  0249                     l1684:
  2911  0249  3001               	movlw	1
  2912  024A  02A8               	subwf	___awdiv@counter,f
  2913  024B  1D03               	btfss	3,2
  2914  024C  2A4E               	goto	u1031
  2915  024D  2A4F               	goto	u1030
  2916  024E                     u1031:
  2917  024E  2A2A               	goto	l1676
  2918  024F                     u1030:
  2919  024F                     l1686:
  2920  024F  0829               	movf	___awdiv@sign,w
  2921  0250  1903               	btfsc	3,2
  2922  0251  2A53               	goto	u1041
  2923  0252  2A54               	goto	u1040
  2924  0253                     u1041:
  2925  0253  2A59               	goto	l1690
  2926  0254                     u1040:
  2927  0254                     l1688:
  2928  0254  09AA               	comf	___awdiv@quotient,f
  2929  0255  09AB               	comf	___awdiv@quotient+1,f
  2930  0256  0AAA               	incf	___awdiv@quotient,f
  2931  0257  1903               	skipnz
  2932  0258  0AAB               	incf	___awdiv@quotient+1,f
  2933  0259                     l1690:
  2934  0259  082B               	movf	___awdiv@quotient+1,w
  2935  025A  00A5               	movwf	?___awdiv+1
  2936  025B  082A               	movf	___awdiv@quotient,w
  2937  025C  00A4               	movwf	?___awdiv
  2938  025D                     l405:
  2939  025D  0008               	return
  2940  025E                     __end_of___awdiv:
  2941                           
  2942                           	psect	text16
  2943  0510                     __ptext16:	
  2944 ;; *************** function _config_rx *****************
  2945 ;; Defined at:
  2946 ;;		line 4 in file "USART.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _config_rx
  2976  0510                     _config_rx:
  2977  0510                     l1480:	
  2978                           ;incstack = 0
  2979                           ; Regs used in _config_rx: [wreg+status,2]
  2980                           
  2981                           
  2982                           ;USART.c: 6:     SPBRGH = 0;
  2983  0510  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0511  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0512  019A               	clrf	26	;volatile
  2986  0513                     l1482:
  2987                           
  2988                           ;USART.c: 7:     SPBRG = 25;
  2989  0513  3019               	movlw	25
  2990  0514  0099               	movwf	25	;volatile
  2991  0515                     l1484:
  2992                           
  2993                           ;USART.c: 8:     TXSTAbits.SYNC = 0;
  2994  0515  1218               	bcf	24,4	;volatile
  2995  0516                     l1486:
  2996                           
  2997                           ;USART.c: 9:     TXSTAbits.BRGH = 1;
  2998  0516  1518               	bsf	24,2	;volatile
  2999  0517                     l1488:
  3000                           
  3001                           ;USART.c: 10:     BAUDCTLbits.BRG16 = 0;
  3002  0517  1683               	bsf	3,5	;RP0=1, select bank3
  3003  0518  1703               	bsf	3,6	;RP1=1, select bank3
  3004  0519  1187               	bcf	7,3	;volatile
  3005  051A                     l1490:
  3006                           
  3007                           ;USART.c: 12:     RCSTAbits.RX9 = 0;
  3008  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3009  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3010  051C  1318               	bcf	24,6	;volatile
  3011  051D                     l1492:
  3012                           
  3013                           ;USART.c: 13:     RCSTAbits.SPEN = 1;
  3014  051D  1798               	bsf	24,7	;volatile
  3015  051E                     l1494:
  3016                           
  3017                           ;USART.c: 14:     RCSTAbits.CREN = 1;
  3018  051E  1618               	bsf	24,4	;volatile
  3019  051F                     l1496:
  3020                           
  3021                           ;USART.c: 16:     PIE1bits.RCIE = 1;
  3022  051F  1683               	bsf	3,5	;RP0=1, select bank1
  3023  0520  1303               	bcf	3,6	;RP1=0, select bank1
  3024  0521  168C               	bsf	12,5	;volatile
  3025  0522                     l1498:
  3026                           
  3027                           ;USART.c: 17:     PIR1bits.RCIF = 0;
  3028  0522  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0523  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0524  128C               	bcf	12,5	;volatile
  3031  0525                     l166:
  3032  0525  0008               	return
  3033  0526                     __end_of_config_rx:
  3034                           
  3035                           	psect	text17
  3036  0587                     __ptext17:	
  3037 ;; *************** function _config_reloj *****************
  3038 ;; Defined at:
  3039 ;;		line 178 in file "D2_Lab2.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		None
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 1
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _config_reloj
  3069  0587                     _config_reloj:
  3070  0587                     l1476:	
  3071                           ;incstack = 0
  3072                           ; Regs used in _config_reloj: []
  3073                           
  3074                           
  3075                           ;D2_Lab2.c: 180:     OSCCONbits.IRCF2 = 1;
  3076  0587  1683               	bsf	3,5	;RP0=1, select bank1
  3077  0588  1303               	bcf	3,6	;RP1=0, select bank1
  3078  0589  170F               	bsf	15,6	;volatile
  3079                           
  3080                           ;D2_Lab2.c: 181:     OSCCONbits.IRCF1 = 1;
  3081  058A  168F               	bsf	15,5	;volatile
  3082                           
  3083                           ;D2_Lab2.c: 182:     OSCCONbits.IRCF0 = 0;
  3084  058B  120F               	bcf	15,4	;volatile
  3085                           
  3086                           ;D2_Lab2.c: 183:     OSCCONbits.SCS = 1;
  3087  058C  140F               	bsf	15,0	;volatile
  3088  058D                     l140:	
  3089                           ;D2_Lab2.c: 184:     return;
  3090                           
  3091  058D  0008               	return
  3092  058E                     __end_of_config_reloj:
  3093                           
  3094                           	psect	text18
  3095  0539                     __ptext18:	
  3096 ;; *************** function _config_io *****************
  3097 ;; Defined at:
  3098 ;;		line 163 in file "D2_Lab2.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0
  3115 ;;      Totals:         0       0       0       0       0
  3116 ;;Total ram usage:        0 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _config_io
  3128  0539                     _config_io:
  3129  0539                     l1462:	
  3130                           ;incstack = 0
  3131                           ; Regs used in _config_io: [wreg+status,2]
  3132                           
  3133                           
  3134                           ;D2_Lab2.c: 165:     ANSEL = 0;
  3135  0539  1683               	bsf	3,5	;RP0=1, select bank3
  3136  053A  1703               	bsf	3,6	;RP1=1, select bank3
  3137  053B  0188               	clrf	8	;volatile
  3138  053C                     l1464:
  3139                           
  3140                           ;D2_Lab2.c: 166:     ANSELH = 0b00010100;
  3141  053C  3014               	movlw	20
  3142  053D  0089               	movwf	9	;volatile
  3143  053E                     l1466:
  3144                           
  3145                           ;D2_Lab2.c: 168:     TRISA = 0;
  3146  053E  1683               	bsf	3,5	;RP0=1, select bank1
  3147  053F  1303               	bcf	3,6	;RP1=0, select bank1
  3148  0540  0185               	clrf	5	;volatile
  3149                           
  3150                           ;D2_Lab2.c: 169:     TRISB = 0b11;
  3151  0541  3003               	movlw	3
  3152  0542  0086               	movwf	6	;volatile
  3153                           
  3154                           ;D2_Lab2.c: 170:     TRISC = 0b10000000;
  3155  0543  3080               	movlw	128
  3156  0544  0087               	movwf	7	;volatile
  3157  0545                     l1468:
  3158                           
  3159                           ;D2_Lab2.c: 172:     PORTA = 0;
  3160  0545  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0546  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0547  0185               	clrf	5	;volatile
  3163  0548                     l1470:
  3164                           
  3165                           ;D2_Lab2.c: 173:     PORTB = 0;
  3166  0548  0186               	clrf	6	;volatile
  3167  0549                     l1472:
  3168                           
  3169                           ;D2_Lab2.c: 174:     PORTC = 0;
  3170  0549  0187               	clrf	7	;volatile
  3171  054A                     l137:
  3172  054A  0008               	return
  3173  054B                     __end_of_config_io:
  3174                           
  3175                           	psect	text19
  3176  058E                     __ptext19:	
  3177 ;; *************** function _config_int *****************
  3178 ;; Defined at:
  3179 ;;		line 187 in file "D2_Lab2.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		None
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _config_int
  3209  058E                     _config_int:
  3210  058E                     l1478:	
  3211                           ;incstack = 0
  3212                           ; Regs used in _config_int: []
  3213                           
  3214                           
  3215                           ;D2_Lab2.c: 189:     INTCONbits.GIE = 1;
  3216  058E  178B               	bsf	11,7	;volatile
  3217                           
  3218                           ;D2_Lab2.c: 190:     INTCONbits.PEIE = 1;
  3219  058F  170B               	bsf	11,6	;volatile
  3220  0590                     l143:	
  3221                           ;D2_Lab2.c: 191:     return;
  3222                           
  3223  0590  0008               	return
  3224  0591                     __end_of_config_int:
  3225                           
  3226                           	psect	text20
  3227  04D6                     __ptext20:	
  3228 ;; *************** function _config_adc *****************
  3229 ;; Defined at:
  3230 ;;		line 4 in file "ADC.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          1       0       0       0       0
  3247 ;;      Totals:         1       0       0       0       0
  3248 ;;Total ram usage:        1 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function _config_adc
  3260  04D6                     _config_adc:
  3261  04D6                     l1450:	
  3262                           ;incstack = 0
  3263                           ; Regs used in _config_adc: [wreg+status,2+status,0]
  3264                           
  3265                           
  3266                           ;ADC.c: 6:     PIE1bits.ADIE = 1;
  3267  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  3268  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  3269  04D8  170C               	bsf	12,6	;volatile
  3270                           
  3271                           ;ADC.c: 7:     PIR1bits.ADIF = 0;
  3272  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3273  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3274  04DB  130C               	bcf	12,6	;volatile
  3275                           
  3276                           ;ADC.c: 9:     ADCON1bits.ADFM = 0;
  3277  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  3278  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  3279  04DE  139F               	bcf	31,7	;volatile
  3280                           
  3281                           ;ADC.c: 10:     ADCON1bits.VCFG0 = 0;
  3282  04DF  121F               	bcf	31,4	;volatile
  3283                           
  3284                           ;ADC.c: 11:     ADCON1bits.VCFG1 = 0;
  3285  04E0  129F               	bcf	31,5	;volatile
  3286  04E1                     l1452:
  3287                           
  3288                           ;ADC.c: 13:     ADCON0bits.ADCS = 0b01;
  3289  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3290  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3291  04E3  081F               	movf	31,w	;volatile
  3292  04E4  393F               	andlw	-193
  3293  04E5  3840               	iorlw	64
  3294  04E6  009F               	movwf	31	;volatile
  3295                           
  3296                           ;ADC.c: 14:     ADCON0bits.CHS = 10;
  3297  04E7  081F               	movf	31,w	;volatile
  3298  04E8  39C3               	andlw	-61
  3299  04E9  3828               	iorlw	40
  3300  04EA  009F               	movwf	31	;volatile
  3301  04EB                     l1454:
  3302                           
  3303                           ;ADC.c: 15:     ADCON0bits.ADON = 1;
  3304  04EB  141F               	bsf	31,0	;volatile
  3305  04EC                     l1456:
  3306                           
  3307                           ;ADC.c: 16:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  3308  04EC  3010               	movlw	16
  3309  04ED  00F5               	movwf	??_config_adc
  3310  04EE                     u1367:
  3311  04EE  0BF5               	decfsz	??_config_adc,f
  3312  04EF  2CEE               	goto	u1367
  3313  04F0  0000               	nop
  3314  04F1                     l1458:
  3315                           
  3316                           ;ADC.c: 18:     ADCON0bits.GO = 1;
  3317  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3318  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  3319  04F3  149F               	bsf	31,1	;volatile
  3320  04F4                     l49:
  3321  04F4  0008               	return
  3322  04F5                     __end_of_config_adc:
  3323                           
  3324                           	psect	text21
  3325  03B4                     __ptext21:	
  3326 ;; *************** function _isr *****************
  3327 ;; Defined at:
  3328 ;;		line 66 in file "D2_Lab2.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          5       0       0       0       0
  3345 ;;      Totals:         5       0       0       0       0
  3346 ;;Total ram usage:        5 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		Interrupt level 1
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function _isr
  3357  03B4                     _isr:
  3358  03B4                     i1l1518:
  3359                           
  3360                           ;D2_Lab2.c: 68:     if(PIR1bits.ADIF)
  3361  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  3362  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  3363  03B6  1F0C               	btfss	12,6	;volatile
  3364  03B7  2BB9               	goto	u86_21
  3365  03B8  2BBA               	goto	u86_20
  3366  03B9                     u86_21:
  3367  03B9  2BCD               	goto	i1l1528
  3368  03BA                     u86_20:
  3369  03BA                     i1l1520:
  3370                           
  3371                           ;D2_Lab2.c: 69:     {;D2_Lab2.c: 70:         if(ADCON0bits.CHS == 10)
  3372  03BA  0C1F               	rrf	31,w	;volatile
  3373  03BB  00F0               	movwf	??_isr
  3374  03BC  0C70               	rrf	??_isr,w
  3375  03BD  390F               	andlw	15
  3376  03BE  3A0A               	xorlw	10
  3377  03BF  1D03               	skipz
  3378  03C0  2BC2               	goto	u87_21
  3379  03C1  2BC3               	goto	u87_20
  3380  03C2                     u87_21:
  3381  03C2  2BC8               	goto	i1l1524
  3382  03C3                     u87_20:
  3383  03C3                     i1l1522:
  3384                           
  3385                           ;D2_Lab2.c: 71:             pot2.adresh = ADRESH;
  3386  03C3  081E               	movf	30,w	;volatile
  3387  03C4  00F0               	movwf	??_isr
  3388  03C5  0870               	movf	??_isr,w
  3389  03C6  00C5               	movwf	_pot2
  3390  03C7  2BCC               	goto	i1l1526
  3391  03C8                     i1l1524:
  3392                           
  3393                           ;D2_Lab2.c: 73:             pot1.adresh = ADRESH;
  3394  03C8  081E               	movf	30,w	;volatile
  3395  03C9  00F0               	movwf	??_isr
  3396  03CA  0870               	movf	??_isr,w
  3397  03CB  00CB               	movwf	_pot1
  3398  03CC                     i1l1526:
  3399                           
  3400                           ;D2_Lab2.c: 75:         PIR1bits.ADIF = 0;
  3401  03CC  130C               	bcf	12,6	;volatile
  3402  03CD                     i1l1528:
  3403                           
  3404                           ;D2_Lab2.c: 78:     if(PIR1bits.RCIF)
  3405  03CD  1E8C               	btfss	12,5	;volatile
  3406  03CE  2BD0               	goto	u88_21
  3407  03CF  2BD1               	goto	u88_20
  3408  03D0                     u88_21:
  3409  03D0  2BEF               	goto	i1l123
  3410  03D1                     u88_20:
  3411  03D1                     i1l1530:
  3412                           
  3413                           ;D2_Lab2.c: 79:     {;D2_Lab2.c: 80:         data_rx = RCREG;
  3414  03D1  081A               	movf	26,w	;volatile
  3415  03D2  00F0               	movwf	??_isr
  3416  03D3  0870               	movf	??_isr,w
  3417  03D4  00F8               	movwf	_data_rx
  3418                           
  3419                           ;D2_Lab2.c: 81:         switch(data_rx)
  3420  03D5  2BDE               	goto	i1l1538
  3421  03D6                     i1l1532:
  3422                           
  3423                           ;D2_Lab2.c: 84:                 cont.adresh++;
  3424  03D6  3001               	movlw	1
  3425  03D7  00F0               	movwf	??_isr
  3426  03D8  0870               	movf	??_isr,w
  3427  03D9  07BF               	addwf	_cont,f
  3428                           
  3429                           ;D2_Lab2.c: 85:                 break;
  3430  03DA  2BEE               	goto	i1l120
  3431  03DB                     i1l1534:
  3432                           
  3433                           ;D2_Lab2.c: 87:                 cont.adresh--;
  3434  03DB  3001               	movlw	1
  3435  03DC  02BF               	subwf	_cont,f
  3436                           
  3437                           ;D2_Lab2.c: 88:                 break;
  3438  03DD  2BEE               	goto	i1l120
  3439  03DE                     i1l1538:
  3440  03DE  0878               	movf	_data_rx,w
  3441  03DF  00F0               	movwf	??_isr
  3442  03E0  01F1               	clrf	??_isr+1
  3443                           
  3444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3445                           ; Switch size 1, requested type "simple"
  3446                           ; Number of cases is 1, Range of values is 0 to 0
  3447                           ; switch strategies available:
  3448                           ; Name         Instructions Cycles
  3449                           ; simple_byte            4     3 (average)
  3450                           ; direct_byte           11     8 (fixed)
  3451                           ; jumptable            260     6 (fixed)
  3452                           ;	Chosen strategy is simple_byte
  3453  03E1  0871               	movf	??_isr+1,w
  3454  03E2  3A00               	xorlw	0	; case 0
  3455  03E3  1903               	skipnz
  3456  03E4  2BE6               	goto	i1l1914
  3457  03E5  2BEE               	goto	i1l120
  3458  03E6                     i1l1914:
  3459                           
  3460                           ; Switch size 1, requested type "simple"
  3461                           ; Number of cases is 2, Range of values is 43 to 45
  3462                           ; switch strategies available:
  3463                           ; Name         Instructions Cycles
  3464                           ; simple_byte            7     4 (average)
  3465                           ; direct_byte           20    11 (fixed)
  3466                           ; jumptable            263     9 (fixed)
  3467                           ;	Chosen strategy is simple_byte
  3468  03E6  0870               	movf	??_isr,w
  3469  03E7  3A2B               	xorlw	43	; case 43
  3470  03E8  1903               	skipnz
  3471  03E9  2BD6               	goto	i1l1532
  3472  03EA  3A06               	xorlw	6	; case 45
  3473  03EB  1903               	skipnz
  3474  03EC  2BDB               	goto	i1l1534
  3475  03ED  2BEE               	goto	i1l120
  3476  03EE                     i1l120:
  3477                           
  3478                           ;D2_Lab2.c: 92:         PIR1bits.RCIF = 0;
  3479  03EE  128C               	bcf	12,5	;volatile
  3480  03EF                     i1l123:
  3481  03EF  0874               	movf	??_isr+4,w
  3482  03F0  008A               	movwf	10
  3483  03F1  0873               	movf	??_isr+3,w
  3484  03F2  0084               	movwf	4
  3485  03F3  0E72               	swapf	??_isr+2,w
  3486  03F4  0083               	movwf	3
  3487  03F5  0EFE               	swapf	btemp,f
  3488  03F6  0E7E               	swapf	btemp,w
  3489  03F7  0009               	retfie
  3490  03F8                     __end_of_isr:
  3491  007E                     btemp	set	126	;btemp
  3492  007E                     wtemp0	set	126
  3493                           
  3494                           	psect	intentry
  3495  0004                     __pintentry:	
  3496                           ;incstack = 0
  3497                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  3498                           
  3499  0004                     interrupt_function:
  3500  007E                     saved_w	set	btemp
  3501  0004  00FE               	movwf	btemp
  3502  0005  0E03               	swapf	3,w
  3503  0006  00F2               	movwf	??_isr+2
  3504  0007  0804               	movf	4,w
  3505  0008  00F3               	movwf	??_isr+3
  3506  0009  080A               	movf	10,w
  3507  000A  00F4               	movwf	??_isr+4
  3508  000B  120A  118A  2BB4   	ljmp	_isr
  3509                           
  3510                           	psect	config
  3511                           
  3512                           ;Config register CONFIG1 @ 0x2007
  3513                           ;	Oscillator Selection bits
  3514                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3515                           ;	Watchdog Timer Enable bit
  3516                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3517                           ;	Power-up Timer Enable bit
  3518                           ;	PWRTE = OFF, PWRT disabled
  3519                           ;	RE3/MCLR pin function select bit
  3520                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3521                           ;	Code Protection bit
  3522                           ;	CP = OFF, Program memory code protection is disabled
  3523                           ;	Data Code Protection bit
  3524                           ;	CPD = OFF, Data memory code protection is disabled
  3525                           ;	Brown Out Reset Selection bits
  3526                           ;	BOREN = OFF, BOR disabled
  3527                           ;	Internal External Switchover bit
  3528                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3529                           ;	Fail-Safe Clock Monitor Enabled bit
  3530                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3531                           ;	Low Voltage Programming Enable bit
  3532                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3533                           ;	In-Circuit Debugger Mode bit
  3534                           ;	DEBUG = 0x1, unprogrammed default
  3535  2007                     	org	8199
  3536  2007  20D4               	dw	8404
  3537                           
  3538                           ;Config register CONFIG2 @ 0x2008
  3539                           ;	Brown-out Reset Selection bit
  3540                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3541                           ;	Flash Program Memory Self Write Enable bits
  3542                           ;	WRT = OFF, Write protection off
  3543  2008                     	org	8200
  3544  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     31      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> w_Titulos@title(BANK0[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> w_Titulos@title(BANK0[16]), 

    divisor@unidad	PTR unsigned char  size(1) Largest target is 6
		 -> cont(BANK0[6]), pot1(BANK0[6]), pot2(BANK0[6]), 

    divisor@decena	PTR unsigned char  size(1) Largest target is 6
		 -> cont(BANK0[6]), pot1(BANK0[6]), pot2(BANK0[6]), 

    divisor@centena	PTR unsigned char  size(1) Largest target is 6
		 -> cont(BANK0[6]), pot1(BANK0[6]), pot2(BANK0[6]), 

    w_String@data	PTR unsigned char  size(1) Largest target is 16
		 -> w_Titulos@title(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_set_Cursor
    _w_Titulos->_set_Cursor
    _w_String->_strlen
    _w_Char->_pulse_E
    _set_Cursor->_w_Instruction
    _map->___awdiv
    _ini_LCD->_w_Instruction
    _w_Instruction->_pulse_E
    _divisor->___awdiv
    _divisor->___awmod
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_w_Titulos
    _w_Titulos->_w_String
    _w_String->_strlen
    _map->___awdiv
    _divisor->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    7494
                                             26 BANK0      5     5      0
                         _config_adc
                         _config_int
                          _config_io
                       _config_reloj
                          _config_rx
                            _divisor
                            _ini_LCD
                                _map
                         _set_Cursor
                             _w_Char
                          _w_Titulos
 ---------------------------------------------------------------------------------
 (1) _w_Titulos                                           20    20      0    1514
                                              6 BANK0     20    20      0
                         _set_Cursor
                             _w_Char
                           _w_String
 ---------------------------------------------------------------------------------
 (2) _w_String                                             4     4      0     268
                                              2 BANK0      4     4      0
                             _strlen
                             _w_Char
 ---------------------------------------------------------------------------------
 (3) _w_Char                                               1     1      0      22
                                              6 COMMON     1     1      0
                            _pulse_E
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     123
                                              5 COMMON     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_Cursor                                           5     4      1    1199
                                              7 COMMON     1     0      1
                                              0 BANK0      4     4      0
                      _w_Instruction
 ---------------------------------------------------------------------------------
 (1) _map                                                  7     5      2    1186
                                             12 BANK0      7     5      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _ini_LCD                                              2     2      0      22
                                              0 BANK0      2     2      0
                      _w_Instruction
 ---------------------------------------------------------------------------------
 (3) _w_Instruction                                        1     1      0      22
                                              6 COMMON     1     1      0
                            _pulse_E
 ---------------------------------------------------------------------------------
 (4) _pulse_E                                              1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _divisor                                              9     4      5    3551
                                             12 BANK0      9     4      5
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              5 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              7 COMMON     1     1      0
                                              4 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_rx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_reloj                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_int                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_adc                                           1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_adc
   _config_int
   _config_io
   _config_reloj
   _config_rx
   _divisor
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___lwdiv
     ___lwmod
   _ini_LCD
     _w_Instruction
       _pulse_E
   _map
     ___awdiv
     ___wmul
   _set_Cursor
     _w_Instruction
   _w_Char
     _pulse_E
   _w_Titulos
     _set_Cursor
     _w_Char
     _w_String
       _strlen
       _w_Char

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      41       5       81.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 02 23:19:32 2022

                       pc 0002                        l13 057E                        l22 0566  
                      l31 04D5                        l16 036D                        l19 0572  
                      l28 0460                        l36 01F4                        l49 04F4  
            ___awdiv@sign 0029                        fsr 0004       ___wmul@multiplicand 0022  
                     l140 058D                       l143 0590                       l137 054A  
                     l146 048D                       l252 049C                       l405 025D  
                     l149 02BB                       l166 0525                       l254 04B4  
                     l418 0316                       l524 03B3                       l534 0433  
                     l706 050F                       u460 0509                       u461 0508  
                     u470 0460                       u471 045F                       u475 045C  
                     u485 04BF                       u910 0496                       u911 0495  
                     u850 0195                       u940 04B0                       u941 04AF  
                     u925 049D                       u950 01FC                       u951 01FB  
                     u935 04A4                       u960 0207                       u961 0206  
                     u970 0218                       u971 0217                       u990 022A  
                     u991 0229                       u985 021C                       _map 0461  
                     _isr 03B4                       fsr0 0004                       indf 0000  
            ___awmod@sign 0077                      l1210 057B                      l1206 0573  
                    l1214 0568                      l1230 04F8                      l1222 055C  
                    l1208 0576                      l1216 056B                      l1232 04FD  
                    l1224 055F                      l1240 0437                      l1218 056D  
                    l1250 04BC                      l1234 0501                      l1226 0561  
                    l1242 0439                      l1252 04C9                      l1236 0509  
                    l1244 0445                      l1254 04CF                      l1246 044B  
                    l1430 01A2                      l1248 04B8                      l1440 01CA  
                    l1432 01AA                      l1450 04D6                      l1442 01D0  
                    l1434 01B0                      l1452 04E1                      l1700 02C8  
                    l1444 01DC                      l1436 01B8                      l1428 018B  
                    l1454 04EB                      l1470 0548                      l1462 0539  
                    l1710 02DC                      l1702 02CA                      l1446 01E2  
                    l1438 01BE                      l1456 04EC                      l1472 0549  
                    l1464 053C                      l1480 0510                      l1720 02FB  
                    l1712 02E3                      l1704 02CE                      l1800 035C  
                    l1640 0496                      l1448 01EE                      l1458 04F1  
                    l1466 053E                      l1490 051A                      l1482 0513  
                    l1650 01F5                      l1722 0302                      l1714 02E7  
                    l1706 02D3                      l1802 0367                      l1642 04A3  
                    l1468 0545                      l1476 0587                      l1492 051D  
                    l1484 0515                      l1660 0207                      l1652 01F8  
                    l1716 02EB                      l1708 02D9                      l1724 0308  
                    l1740 0382                      l1732 036E                      l1812 025E  
                    l1644 04AA                      l1636 048E                      l1478 058E  
                    l1494 051E                      l1486 0516                      l1670 021B  
                    l1662 020C                      l1654 01FC                      l1726 030D  
                    l1718 02F5                      l1750 03A2                      l1742 0386  
                    l1734 0372                      l1814 0276                      l1646 04B0  
                    l1638 0490                      l1806 0464                      l1830 0040  
                    l1822 002C                      l1496 051F                      l1488 0517  
                    l1680 0241                      l1672 0222                      l1664 0210  
                    l1656 0201                      l1728 0312                      l1752 03A9  
                    l1744 038A                      l1736 0378                      l1760 0400  
                    l1816 0289                      l1808 0489                      l1840 005E  
                    l1832 0045                      l1824 0031                      l1498 0522  
                    l1690 0259                      l1682 0242                      l1674 0226  
                    l1666 0212                      l1658 0203                      l1746 039B  
                    l1738 037B                      l1754 03AF                      l1770 041C  
                    l1762 0403                      l1818 02A2                      l1850 007D  
                    l1842 0063                      l1834 004A                      l1826 0036  
                    l1684 0249                      l1676 022A                      l1668 0218  
                    l1748 03A1                      l1772 0422                      l1764 040A  
                    l1780 0317                      l1860 00D6                      l1852 0089  
                    l1844 0067                      l1836 004F                      l1828 003B  
                    l1678 023B                      l1686 024F                      l1694 02BC  
                    l1774 0429                      l1766 040E                      l1758 03F8  
                    l1790 0338                      l1782 031B                      l1870 0109  
                    l1862 00DF                      l1854 009E                      l1846 006E  
                    l1838 0055                      l1688 0254                      l1696 02BD  
                    l1768 0412                      l1776 042F                      l1792 033E  
                    l1784 031C                      l1880 013F                      l1872 0115  
                    l1864 00EB                      l1856 00B5                      l1848 0071  
                    l1698 02C3                      l1794 0345                      l1786 0327  
                    l1890 0172                      l1882 0148                      l1874 011E  
                    l1866 00F4                      l1858 00CF                      l1796 034B  
                    l1788 032D                      l1892 017E                      l1884 0154  
                    l1876 012A                      l1868 0100                      l1798 0356  
                    l1886 015D                      l1878 0133                      ?_map 002C  
                    l1888 0169                      ?_isr 0070                      u1010 023B  
                    u1011 023A                      u1100 02F5                      u1005 022B  
                    u1101 02F4                      u1030 024F                      u1031 024E  
                    u1015 0237                      u1040 0254                      u1120 0308  
                    u1200 03AF                      u1041 0253                      u1025 0243  
                    u1121 0307                      u1105 02F1                      u1201 03AE  
                    u1130 030D                      u1050 02C3                      u1210 0400  
                    u1131 030C                      u1115 02FC                      u1051 02C2  
                    u1211 03FF                      u1060 02CE                      u1140 0378  
                    u1061 02CD                      u1141 0377                      u1070 02D9  
                    u1230 0412                      u1071 02D8                      u1231 0411  
                    u1160 038A                      u1240 041C                      u1161 0389  
                    u1241 041B                      u1225 0404                      u1090 02EB  
                    u1091 02EA                      u1155 037C                      u1307 0322  
                    u1180 039B                      u1260 042F                      u1085 02DD  
                    u1181 039A                      u1261 042E                      u1245 0418  
                    u1317 0333                      u1270 0055                      u1175 038B  
                    u1255 0423                      u1327 0342                      u1271 0054  
                    u1280 005E                      u1185 0397                      u1337 0351  
                    u1281 005D                      u1195 03A3                      u1347 0362  
                    u1357 0578                      u1367 04EE                      u1297 006B  
                    _cont 003F                      _main 002C                      _pot1 004B  
                    _pot2 0045                      btemp 007E            ??_config_reloj 0075  
                    start 000E                     ??_map 002E                     ??_isr 0070  
                   ?_main 0070           __end_of___awdiv 025E           __end_of___awmod 0317  
                   _ANSEL 0188           ___awdiv@divisor 0024           __end_of___lwdiv 03B4  
                   i1l120 03EE                     i1l123 03EF           __end_of___lwmod 0434  
         ___awdiv@counter 0028                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   u86_20 03BA                     u86_21 03B9                     u87_20 03C3  
                   u87_21 03C2                     u88_20 03D1                     u88_21 03D0  
         __end_of_ini_LCD 036E           __end_of_divisor 02BC                     pclath 000A  
         __end_of_pulse_E 057F                     status 0003                     wtemp0 007E  
         __initialization 0011              __end_of_main 018B                    ??_main 003A  
          w_Titulos@F1403 0051                    _ADRESH 001E          ___awdiv@dividend 0026  
                  _ANSELH 0189    __size_of_w_Instruction 000C                    i1l1520 03BA  
                  i1l1530 03D1                    i1l1522 03C3                    i1l1532 03D6  
                  i1l1524 03C8                    i1l1534 03DB                    i1l1526 03CC  
                  i1l1518 03B4                    i1l1528 03CD                    i1l1538 03DE  
                  i1l1914 03E6                    _SPBRGH 009A            w_Titulos@title 002A  
                  ___wmul 048E                 ??___awdiv 0077                 ??___awmod 0075  
               ??___lwdiv 0075                 ??___lwmod 0075                    _w_Char 055B  
        ___awdiv@quotient 002A           ___awmod@divisor 0020           ___awmod@counter 0076  
        __end_of_w_String 0461                    map@res 0031                    map@num 0030  
               ??_ini_LCD 0020                    _strlen 04F5                 ??_divisor 0031  
    __end_of_config_reloj 058E                    saved_w 007E                 ??_pulse_E 0075  
 __end_of__initialization 0028            __pcstackCOMMON 0070              __pidataBANK0 054B  
           _w_Instruction 0567             divisor@decena 002F             divisor@unidad 0030  
      __size_of_config_io 0012        __size_of_config_rx 0016                __pbssBANK0 003F  
      __size_of_w_Titulos 006A                __pmaintext 002C            ?_w_Instruction 0070  
                 ?___wmul 0020                __pintentry 0004                   ?_w_Char 0070  
                 ?_strlen 0075                _config_adc 04D6                _config_int 058E  
               ?_w_String 0070         __end_of_config_io 054B         __end_of_config_rx 0526  
w_Instruction@instruction 0076                   ___awdiv 01F5                   ___awmod 02BC  
         __size_of___wmul 0027                   ___lwdiv 036E                   ___lwmod 03F8  
         __size_of_w_Char 000C                   _data_rx 0078     __size_of_config_reloj 0007  
                 __ptext1 018B                   __ptext2 0434                   __ptext3 055B  
                 __ptext4 04F5                   __ptext5 04B5                   __ptext6 0461  
                 __ptext7 048E                   __ptext8 0317                   __ptext9 0567  
                 _ini_LCD 0317                   _divisor 025E           __size_of_strlen 001B  
            __size_of_map 002D              __size_of_isr 0044          ___awmod@dividend 0022  
       __end_of_w_Titulos 01F5                   _pulse_E 0573                   clrloop0 0580  
    end_of_initialization 0028                _set_Cursor 04B5                ??_w_String 0022  
         ??_w_Instruction 0076              _config_reloj 0587                 _RCSTAbits 0018  
                 strlen@s 0020             set_Cursor@pos 0077                 _PORTCbits 0007  
             ?_config_adc 0070               ?_config_int 0070                 _TXSTAbits 0098  
              w_Char@data 0076                divisor@aux 0034                divisor@num 002C  
          __end_of___wmul 04B5               _BAUDCTLbits 0187            __end_of_w_Char 0567  
          __end_of_strlen 0510       start_initialization 0011            divisor@centena 002E  
             __end_of_map 048E               __end_of_isr 03F8              w_String@data 0024  
             ?_set_Cursor 0077       __size_of_config_adc 001F       __size_of_config_int 0003  
                ??___wmul 0075                init_fetch0 0526               __pdataBANK0 0051  
                ??_w_Char 0076                  ??_strlen 0077               __pbssCOMMON 0078  
               ___latbits 0002             __pcstackBANK0 0020          ___lwdiv@dividend 0022  
       __size_of_w_String 002D                  ?___awdiv 0024                  ?___awmod 0020  
                ?___lwdiv 0020                  ?___lwmod 0020                 _config_io 0539  
               _config_rx 0510                  ?_ini_LCD 0070       __size_of_set_Cursor 0021  
                ?_divisor 002C                  ?_pulse_E 0070          ___lwdiv@quotient 0025  
               _w_Titulos 018B         interrupt_function 0004            ___wmul@product 0075  
               clear_ram0 057F                  _PIE1bits 008C                  _PIR1bits 000C  
              ?_config_io 0070                ?_config_rx 0070                _ADCON0bits 001F  
              _ADCON1bits 009F         ___wmul@multiplier 0020              ??_config_adc 0075  
            ??_config_int 0075                ?_w_Titulos 0070     __end_of_w_Instruction 0573  
      __end_of_config_adc 04F5        __end_of_config_int 0591          __size_of___awdiv 0069  
        __size_of___awmod 005B          __size_of___lwdiv 0046          __size_of___lwmod 003C  
               w_String@i 0025          __size_of_ini_LCD 0057          __size_of_divisor 005E  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0024                  __ptext10 0573  
                __ptext11 025E                  __ptext20 04D6                  __ptext12 03F8  
                __ptext21 03B4                  __ptext13 036E                  __ptext14 02BC  
                __ptext15 01F5                  __ptext16 0510                  __ptext17 0587  
                __ptext18 0539                  __ptext19 058E          __size_of_pulse_E 000C  
            ??_set_Cursor 0020             __size_of_main 015F                  _w_String 0434  
             ??_config_io 0075               ??_config_rx 0075        __end_of_set_Cursor 04D6  
              _INTCONbits 000B                  init_ram0 052A                  intlevel1 0000  
             ??_w_Titulos 0026          ___lwmod@dividend 0022                _OSCCONbits 008F  
     set_Cursor@direction 0023           ___lwmod@divisor 0020                  strlen@cp 0021  
         ___lwmod@counter 0076            set_Cursor@line 0022             ?_config_reloj 0070  
